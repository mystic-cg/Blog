<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Some repos in aliyun</title>
    <url>/aliyun-repo.html</url>
    <content><![CDATA[<h1 id="Pip-Repo"><a href="#Pip-Repo" class="headerlink" title="Pip Repo"></a>Pip Repo</h1> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># linux</span></span><br><span class="line">mkdir ~/.pip</span><br><span class="line">cat &gt; ~/.pip/pip.conf &lt;&lt; EOF</span><br><span class="line">[global]</span><br><span class="line">index-url=https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line">mkdir <span class="variable">$HOME</span>/pip</span><br><span class="line">touch <span class="variable">$HOME</span>/pip/pip.ini</span><br></pre></td></tr></table></figure>



<h1 id="Centos8-Repo"><a href="#Centos8-Repo" class="headerlink" title="Centos8 Repo"></a>Centos8 Repo</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[AppStream]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - AppStream</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;$releasever&#x2F;AppStream&#x2F;$basearch&#x2F;os&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">[BaseOS]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - Base</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;$releasever&#x2F;BaseOS&#x2F;$basearch&#x2F;os&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">[extras]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - extras</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;$releasever&#x2F;extras&#x2F;$basearch&#x2F;os&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">[centosplus]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - centosplus</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;$releasever&#x2F;centosplus&#x2F;$basearch&#x2F;os&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">[HighAvailability]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - HighAvailability</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;$releasever&#x2F;HighAvailability&#x2F;$basearch&#x2F;os&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">[PowerTools]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - PowerTools</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;$releasever&#x2F;PowerTools&#x2F;$basearch&#x2F;os&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">[epel]</span><br><span class="line">name&#x3D;CentOS-$releasever - aliyun - epel</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;epel&#x2F;$releasever&#x2F;Everything&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br></pre></td></tr></table></figure>

<h1 id="Ubuntu18-04-Repo"><a href="#Ubuntu18-04-Repo" class="headerlink" title="Ubuntu18.04 Repo"></a>Ubuntu18.04 Repo</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>repo</tag>
        <tag>pip</tag>
        <tag>centos</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible install software from source</title>
    <url>/ansible-install-from-source.html</url>
    <content><![CDATA[<h1 id="install-lldpd-from-source-by-ansible"><a href="#install-lldpd-from-source-by-ansible" class="headerlink" title="install lldpd from source by ansible"></a>install lldpd from source by ansible</h1><h2 id="show-the-content"><a href="#show-the-content" class="headerlink" title="show the content"></a>show the content</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat lldpd.yml</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">lldpd</span> <span class="string">installation</span></span><br><span class="line">    <span class="attr">vars:</span></span><br><span class="line">        <span class="attr">lldpd_version:</span> <span class="number">1.0</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Retrieve</span> <span class="string">lldpd</span> <span class="string">source</span> <span class="string">code</span></span><br><span class="line">            <span class="attr">get_url:</span></span><br><span class="line">                <span class="comment"># TODO replace it</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Extract</span> <span class="string">archive</span></span><br><span class="line">            <span class="attr">unarchive:</span></span><br><span class="line">                <span class="comment"># if configured like as the following, 'Retrieve lldpd source code' task can be removed</span></span><br><span class="line">                <span class="comment"># src: https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123; lldpd_version &#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">src:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">install</span></span><br><span class="line">            <span class="attr">command:</span> <span class="string">./configure</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">                <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;/configure.status.log</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Build</span> <span class="string">lldpd</span></span><br><span class="line">            <span class="attr">command:</span> <span class="string">make</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">                <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;/make.status.log</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Install</span> <span class="string">lldpd</span></span><br><span class="line">            <span class="attr">become:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">command:</span> <span class="string">make</span> <span class="string">install</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">                <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;/make_install.status.log</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">chroot</span> <span class="string">for</span> <span class="string">lldpd</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/usr/local/var/run/lldpd</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">group</span></span><br><span class="line">            <span class="attr">group:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">user</span></span><br><span class="line">            <span class="attr">user:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">                <span class="attr">group:</span> <span class="string">_lldpd</span></span><br><span class="line">                <span class="attr">comment:</span> <span class="string">lldpd</span> <span class="string">user</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">build</span> <span class="string">directory</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">archive</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">            <span class="attr">systemd:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">                <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">                <span class="attr">masked:</span> <span class="literal">false</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Start</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">            <span class="attr">systemd:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure>

<h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook lldpd.yml</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>automation</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>roles&amp;tags in ansible</title>
    <url>/ansible-role-tags.html</url>
    <content><![CDATA[<h1 id="install-lldpd-by-ansible-roles"><a href="#install-lldpd-by-ansible-roles" class="headerlink" title="install lldpd by ansible roles"></a>install lldpd by ansible roles</h1><h2 id="ansible-layout"><a href="#ansible-layout" class="headerlink" title="ansible layout"></a>ansible layout</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@03e6e45a7f92 cc]<span class="comment"># tree ansible</span></span><br><span class="line">ansible</span><br><span class="line">├── roles</span><br><span class="line">│   └── lldp</span><br><span class="line">│       ├── defaults</span><br><span class="line">│       │   └── main.yml</span><br><span class="line">│       ├── files</span><br><span class="line">│       └── tasks</span><br><span class="line">│           ├── disable_lldp.yml</span><br><span class="line">│           ├── enable_lldp.yml</span><br><span class="line">│           └── main.yml</span><br><span class="line">└── site.yml</span><br><span class="line"></span><br><span class="line">5 directories, 5 files</span><br></pre></td></tr></table></figure>

<h2 id="show-the-content"><a href="#show-the-content" class="headerlink" title="show the content"></a>show the content</h2><h3 id="site-yml"><a href="#site-yml" class="headerlink" title="site.yml"></a>site.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">lldpd</span> <span class="string">installation</span></span><br><span class="line">    <span class="attr">roles:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">role:</span> <span class="string">lldp</span></span><br><span class="line">            <span class="attr">tags:</span> <span class="string">lldp</span></span><br></pre></td></tr></table></figure>

<h3 id="defaults-main-yml"><a href="#defaults-main-yml" class="headerlink" title="defaults/main.yml"></a>defaults/main.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">LLDPD_VERSION:</span> <span class="number">1.0</span><span class="number">.5</span></span><br></pre></td></tr></table></figure>

<h3 id="tasks-main-yml"><a href="#tasks-main-yml" class="headerlink" title="tasks/main.yml"></a>tasks/main.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">include:</span> <span class="string">enable_lldp.yml</span></span><br></pre></td></tr></table></figure>

<h3 id="tasks-enable-lldp-yml"><a href="#tasks-enable-lldp-yml" class="headerlink" title="tasks/enable_lldp.yml"></a>tasks/enable_lldp.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Retrieve</span> <span class="string">lldpd</span> <span class="string">source</span> <span class="string">code</span></span><br><span class="line">    <span class="attr">get_url:</span></span><br><span class="line">        <span class="comment"># TODO replace it</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Extract</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">unarchive:</span></span><br><span class="line">        <span class="comment"># if configured like as the following, 'Retrieve lldpd source code' task can be removed</span></span><br><span class="line">        <span class="comment"># src: https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123; LLDPD_VERSION &#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/tmp</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">install</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">./configure</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;/configure.status.log</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span> <span class="string">lldpd</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">make</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;/make.status.log</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Install</span> <span class="string">lldpd</span></span><br><span class="line">    <span class="attr">become:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">make</span> <span class="string">install</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;/make_install.status.log</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">chroot</span> <span class="string">for</span> <span class="string">lldpd</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/usr/local/var/run/lldpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">group</span></span><br><span class="line">    <span class="attr">group:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">_lldpd</span></span><br><span class="line">        <span class="attr">comment:</span> <span class="string">lldpd</span> <span class="string">user</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">build</span> <span class="string">directory</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">lldpd.conf</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/etc/lldpd.conf</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">touch</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">lldpd.conf</span></span><br><span class="line">    <span class="attr">blockinfile:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/etc/lldpd.conf</span></span><br><span class="line">        <span class="attr">block:</span> <span class="string">|</span></span><br><span class="line">            <span class="comment"># Reference from https://vincentbernat.github.io/lldpd/usage.html</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">chassisid</span> <span class="string">&lt;chassisid&gt;</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">hostname</span> <span class="string">&lt;hostname&gt;</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">description</span> <span class="string">&lt;description&gt;</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">platform</span> <span class="string">&lt;platform&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">interface</span> <span class="string">pattern</span> <span class="string">eth0,eth1</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">interface</span> <span class="string">permanent</span> <span class="string">eth0,eth1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># rx-and-tx: receive and transmit LLDP frames</span></span><br><span class="line">            <span class="comment"># tx-only:</span></span><br><span class="line">            <span class="comment"># rx-only:</span></span><br><span class="line">            <span class="comment"># disabled:</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">ports</span> <span class="string">eth0,eth1</span> <span class="string">lldp</span> <span class="string">status</span> <span class="string">tx-only</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># TTL is tx-interval * tx-hold, i.e. 120 seconds</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">lldp</span> <span class="string">tx-interval</span> <span class="string">&lt;number,</span> <span class="string">default</span> <span class="string">is</span> <span class="number">30</span> <span class="string">seconds&gt;</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">lldp</span> <span class="string">tx-hold</span> <span class="string">&lt;number,</span> <span class="string">default</span> <span class="string">is</span> <span class="number">4</span><span class="string">&gt;</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">    <span class="attr">systemd:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">masked:</span> <span class="literal">false</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Start</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">    <span class="attr">systemd:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure>

<h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook site.yml</span><br><span class="line"><span class="comment"># or only run role: lldp</span></span><br><span class="line">ansible-playbook site.yml -t lldp</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>automation</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible</title>
    <url>/ansible.html</url>
    <content><![CDATA[<h1 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h1><blockquote>
<p>  <a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html#directory-layout" target="_blank" rel="noopener">Directory Layout</a></p>
</blockquote>
<h2 id="Directory-Layout"><a href="#Directory-Layout" class="headerlink" title="Directory Layout"></a>Directory Layout</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">production                # inventory file for production servers</span><br><span class="line">staging                   # inventory file for staging environment</span><br><span class="line"></span><br><span class="line">group_vars&#x2F;</span><br><span class="line">   group1.yml             # here we assign variables to particular groups</span><br><span class="line">   group2.yml</span><br><span class="line">host_vars&#x2F;</span><br><span class="line">   hostname1.yml          # here we assign variables to particular systems</span><br><span class="line">   hostname2.yml</span><br><span class="line"></span><br><span class="line">library&#x2F;                  # if any custom modules, put them here (optional)</span><br><span class="line">module_utils&#x2F;             # if any custom module_utils to support modules, put them here (optional)</span><br><span class="line">filter_plugins&#x2F;           # if any custom filter plugins, put them here (optional)</span><br><span class="line"></span><br><span class="line">site.yml                  # master playbook</span><br><span class="line">webservers.yml            # playbook for webserver tier</span><br><span class="line">dbservers.yml             # playbook for dbserver tier</span><br><span class="line"></span><br><span class="line">roles&#x2F;</span><br><span class="line">    common&#x2F;               # this hierarchy represents a &quot;role&quot;</span><br><span class="line">        tasks&#x2F;            #</span><br><span class="line">            main.yml      #  &lt;-- tasks file can include smaller files if warranted</span><br><span class="line">        handlers&#x2F;         #</span><br><span class="line">            main.yml      #  &lt;-- handlers file</span><br><span class="line">        templates&#x2F;        #  &lt;-- files for use with the template resource</span><br><span class="line">            ntp.conf.j2   #  &lt;------- templates end in .j2</span><br><span class="line">        files&#x2F;            #</span><br><span class="line">            bar.txt       #  &lt;-- files for use with the copy resource</span><br><span class="line">            foo.sh        #  &lt;-- script files for use with the script resource</span><br><span class="line">        vars&#x2F;             #</span><br><span class="line">            main.yml      #  &lt;-- variables associated with this role</span><br><span class="line">        defaults&#x2F;         #</span><br><span class="line">            main.yml      #  &lt;-- default lower priority variables for this role</span><br><span class="line">        meta&#x2F;             #</span><br><span class="line">            main.yml      #  &lt;-- role dependencies</span><br><span class="line">        library&#x2F;          # roles can also include custom modules</span><br><span class="line">        module_utils&#x2F;     # roles can also include custom module_utils</span><br><span class="line">        lookup_plugins&#x2F;   # or other types of plugins, like lookup in this case</span><br><span class="line"></span><br><span class="line">    webtier&#x2F;              # same kind of structure as &quot;common&quot; was above, done for the webtier role</span><br><span class="line">    monitoring&#x2F;           # &quot;&quot;</span><br><span class="line">    fooapp&#x2F;               # &quot;&quot;</span><br></pre></td></tr></table></figure>

<p>roles下的目录含义:</p>
<p><code>files</code>：用来存放由copy模块或script模块调用的文件。<br><code>templates</code>：用来存放jinjia2模板，template模块会自动在此目录中寻找jinjia2模板文件。<br><code>tasks</code>：此目录应当包含一个main.yml文件，用于定义此角色的任务列表，此文件可以使用include包含其它的位于此目录的task文件。<br><code>handlers</code>：此目录应当包含一个main.yml文件，用于定义此角色中触发条件时执行的动作。<br><code>vars</code>：此目录应当包含一个main.yml文件，用于定义此角色用到的变量。<br><code>defaults</code>：此目录应当包含一个main.yml文件，用于为当前角色设定默认变量。<br><code>meta</code>：此目录应当包含一个main.yml文件，用于定义此角色的特殊设定及其依赖关系。</p>
<h2 id="Alternative-Directory-Layout"><a href="#Alternative-Directory-Layout" class="headerlink" title="Alternative Directory Layout"></a>Alternative Directory Layout</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inventories&#x2F;</span><br><span class="line">   production&#x2F;</span><br><span class="line">      hosts               # inventory file for production servers</span><br><span class="line">      group_vars&#x2F;</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars&#x2F;</span><br><span class="line">         hostname1.yml    # here we assign variables to particular systems</span><br><span class="line">         hostname2.yml</span><br><span class="line"></span><br><span class="line">   staging&#x2F;</span><br><span class="line">      hosts               # inventory file for staging environment</span><br><span class="line">      group_vars&#x2F;</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars&#x2F;</span><br><span class="line">         stagehost1.yml   # here we assign variables to particular systems</span><br><span class="line">         stagehost2.yml</span><br><span class="line"></span><br><span class="line">library&#x2F;</span><br><span class="line">module_utils&#x2F;</span><br><span class="line">filter_plugins&#x2F;</span><br><span class="line"></span><br><span class="line">site.yml</span><br><span class="line">webservers.yml</span><br><span class="line">dbservers.yml</span><br><span class="line"></span><br><span class="line">roles&#x2F;</span><br><span class="line">    common&#x2F;</span><br><span class="line">    webtier&#x2F;</span><br><span class="line">    monitoring&#x2F;</span><br><span class="line">    fooapp&#x2F;</span><br></pre></td></tr></table></figure>

<h1 id="env"><a href="#env" class="headerlink" title="env"></a>env</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./</span><br><span class="line">├── filter_plugins</span><br><span class="line">├── group_vars</span><br><span class="line">├── host_vars</span><br><span class="line">│   └── hosts</span><br><span class="line">├── library</span><br><span class="line">├── module_utils</span><br><span class="line">├── roles</span><br><span class="line">└── site.yaml</span><br><span class="line"></span><br><span class="line">6 directories, 2 files</span><br></pre></td></tr></table></figure>

<h1 id="ansible-cli"><a href="#ansible-cli" class="headerlink" title="ansible cli"></a>ansible cli</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># find system serial</span></span><br><span class="line"><span class="comment"># --module-name or -m    --args or -a</span></span><br><span class="line">ansible localhost --module-name setup --args <span class="string">'filter=ansible_product_serial'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list groups</span></span><br><span class="line">ansible localhost -m debug -a <span class="string">'var=groups'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list groups keys</span></span><br><span class="line">ansible localhost -m debug -a <span class="string">'var=groups.keys()'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list groups(or this command)</span></span><br><span class="line">ansible-inventory -i inventory/prod.yml --list</span><br></pre></td></tr></table></figure>

<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">hello-world</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">set_fact:</span></span><br><span class="line">                <span class="attr">hello:</span> <span class="string">'hello world'</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">a</span> <span class="string">file</span> <span class="string">called</span> <span class="string">'/tmp/testfile.txt'</span> <span class="string">with</span> <span class="string">the</span> <span class="string">content</span> <span class="string">'hello world'</span><span class="string">.</span></span><br><span class="line">            <span class="attr">copy:</span></span><br><span class="line">            	<span class="comment"># get variable from hostvars</span></span><br><span class="line">                <span class="attr">content:</span> <span class="string">'<span class="template-variable">&#123;&#123; hostvars[inventory_hostname]["hello"] &#125;&#125;</span>'</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/testfile.txt</span></span><br></pre></td></tr></table></figure>

<h1 id="append-some-lines-to-a-test-file"><a href="#append-some-lines-to-a-test-file" class="headerlink" title="append some lines to a test file"></a>append some lines to a test file</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">hello-world</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">vars:</span></span><br><span class="line">        <span class="attr">device_by_pci_address:</span> <span class="string">"<span class="template-variable">&#123;&#123;</span></span></span><br><span class="line"><span class="string"><span class="template-variable">            ansible_facts | json_query('@.* | [?pciid].&#123;key: pciid, value: device&#125;') | items2dict</span></span></span><br><span class="line"><span class="string"><span class="template-variable">        &#125;&#125;</span>"</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">set</span> <span class="string">some</span> <span class="string">variables</span> <span class="string">to</span> <span class="string">hostvars</span></span><br><span class="line">            <span class="attr">set_fact:</span></span><br><span class="line">                <span class="attr">classmates:</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">'male'</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">'AA'</span></span><br><span class="line">                        <span class="attr">age:</span> <span class="number">15</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">'female'</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">'BB'</span></span><br><span class="line">                        <span class="attr">age:</span> <span class="number">16</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">'male'</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">'CC'</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">'female'</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">'DD'</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">'male'</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">'lo'</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">'female'</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">'enp0s3'</span></span><br><span class="line">                <span class="attr">pci_bus_addr2nic:</span> <span class="string">"<span class="template-variable">&#123;&#123; ansible_facts | json_query('@.* | [?pciid].&#123;key: pciid, value: device&#125;') | items2dict &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Get</span> <span class="string">system</span> <span class="string">serial</span></span><br><span class="line">            <span class="attr">become:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">shell:</span> <span class="string">cat</span> <span class="string">/sys/devices/virtual/dmi/id/product_serial</span></span><br><span class="line">            <span class="attr">register:</span> <span class="string">system_serial</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">create</span> <span class="string">a</span> <span class="string">test</span> <span class="string">file</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">touch</span></span><br><span class="line">                <span class="attr">owner:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">group:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">mode:</span> <span class="number">0777</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">append</span> <span class="string">some</span> <span class="string">lines</span> <span class="string">to</span> <span class="string">the</span> <span class="string">test</span> <span class="string">file</span></span><br><span class="line">            <span class="attr">lineinfile:</span></span><br><span class="line">                <span class="comment"># test: get the mac address of a nic</span></span><br><span class="line">                <span class="attr">line:</span> <span class="string">'<span class="template-variable">&#123;&#123; item.name &#125;&#125;</span>: <span class="template-variable">&#123;&#123; item.sex &#125;&#125;</span> ==&gt; <span class="template-variable">&#123;&#123; ansible_facts[item.name].macaddress &#125;&#125;</span> '</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line">            <span class="attr">loop:</span> <span class="string">'<span class="template-variable">&#123;&#123; hostvars[inventory_hostname]["classmates"] &#125;&#125;</span>'</span></span><br><span class="line">            <span class="attr">when:</span> <span class="string">inventory_hostname</span> <span class="string">not</span> <span class="string">in</span> <span class="string">['host1',</span> <span class="string">'host2'</span><span class="string">]</span> <span class="string">and</span> <span class="string">item.name</span> <span class="string">in</span> <span class="string">['enp0s3']</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">add</span> <span class="string">a</span> <span class="string">block</span> <span class="string">to</span> <span class="string">a</span> <span class="string">file</span></span><br><span class="line">            <span class="attr">blockinfile:</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line">                <span class="attr">block:</span> <span class="string">|</span></span><br><span class="line">                    <span class="string">hello</span> <span class="string">world</span></span><br><span class="line">                    <span class="string">Java</span> <span class="string">is</span> <span class="string">the</span> <span class="string">best.</span></span><br><span class="line">                    <span class="attr">system_serial.stdout:</span> <span class="string">&#123;&#123;</span> <span class="string">system_serial.stdout</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">                    <span class="string">&#123;&#123;</span> <span class="string">hostvars[inventory_hostname].system_serial.stdout</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                    <span class="comment">#########</span></span><br><span class="line">                    <span class="attr">pci_bus_addr2nic:</span> <span class="string">&#123;&#123;</span> <span class="string">pci_bus_addr2nic</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">                    <span class="string">&#123;&#123;</span> <span class="string">hostvars[inventory_hostname]["pci_bus_addr2nic"]</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                    <span class="comment">###########</span></span><br><span class="line">                    <span class="attr">device_by_pci_address:</span> <span class="string">&#123;&#123;</span> <span class="string">device_by_pci_address</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">                    <span class="attr">Must not Get from this way:</span> <span class="string">hostvars[inventory_hostname]["device_by_pci_address"]</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">pci_bus_addr2nic</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">device_by_pci_address</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="comment"># this variable is from ansible_facts</span></span><br><span class="line">                <span class="comment"># you can get some info by this command (ansible localhost --module-name setup --args 'filter=ansible_product_serial')</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">ansible_product_serial</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">system_serial.stdout</span></span><br></pre></td></tr></table></figure>

<h2 id="install-a-package-on-RHEL"><a href="#install-a-package-on-RHEL" class="headerlink" title="install a package on RHEL"></a>install a package on RHEL</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">install</span> <span class="string">Apache</span> <span class="string">webserver</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">install</span> <span class="string">httpd</span></span><br><span class="line">            <span class="attr">dnf:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">                <span class="attr">State:</span> <span class="string">latest</span></span><br></pre></td></tr></table></figure>

<h2 id="install-a-package-on-Debian"><a href="#install-a-package-on-Debian" class="headerlink" title="install a package on Debian"></a>install a package on Debian</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">install</span> <span class="string">Apache</span> <span class="string">webserver</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">databases</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">install</span> <span class="string">Apache</span> <span class="string">webserver</span></span><br><span class="line">            <span class="attr">apt:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">apache2</span></span><br><span class="line">                <span class="attr">State:</span> <span class="string">latest</span></span><br></pre></td></tr></table></figure>

<h2 id="operate-a-service"><a href="#operate-a-service" class="headerlink" title="operate a service"></a>operate a service</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># https://medium.com/bigpanda-engineering/using-ansible-to-compile-nginx-from-sources-with-custom-modules-f6e6c6a42493</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Start</span> <span class="string">service</span> <span class="string">httpd,</span> <span class="string">if</span> <span class="string">not</span> <span class="string">started</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Stop</span> <span class="string">service</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">stopped</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Restart</span> <span class="string">network</span> <span class="string">service</span> <span class="string">for</span> <span class="string">interface</span> <span class="string">eth0</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">network</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">        <span class="attr">args:</span> <span class="string">enp2s0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>automation</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Asciidoc with Spring Restdocs</title>
    <url>/asciidoc-restdocs.html</url>
    <content><![CDATA[<h1 id="Integrate-Asciidoc-with-Spring-Restdocs"><a href="#Integrate-Asciidoc-with-Spring-Restdocs" class="headerlink" title="Integrate Asciidoc with Spring Restdocs"></a>Integrate Asciidoc with Spring Restdocs</h1><h2 id="Preconditon"><a href="#Preconditon" class="headerlink" title="Preconditon"></a>Preconditon</h2><p><strong>The following is based on Webflux</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">asciidoctor version: 3.2.0</span><br><span class="line">spring restdocs version: 2.0.4.RELEASE</span><br><span class="line">dependency management: gradle</span><br></pre></td></tr></table></figure>

<p>Some asciidoctor knowledge:</p>
<p>sourceDir: <code>src/docs/asciidoc</code></p>
<p>outputDir: <code>${buildDir}/docs/asciidoc</code></p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="common-config"><a href="#common-config" class="headerlink" title="common config"></a>common config</h3><p>The following config is not a complete configuration.</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// plugins</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'org.springframework.boot'</span> version <span class="string">'2.3.0.M4'</span></span><br><span class="line">    id <span class="string">'io.spring.dependency-management'</span> version <span class="string">'1.0.9.RELEASE'</span></span><br><span class="line">    id <span class="string">'java'</span></span><br><span class="line">    <span class="comment">/* for rest docs */</span></span><br><span class="line">    id <span class="string">'org.asciidoctor.jvm.convert'</span> version <span class="string">'3.2.0'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configurations &#123;</span><br><span class="line">    asciidoctorExtensions</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ext &#123;</span><br><span class="line">    set(<span class="string">'snippetsDir'</span>, file(<span class="string">'build/generated-snippets'</span>))</span><br><span class="line">    set(<span class="string">'springRestdocsVersion'</span>, <span class="string">'2.0.4.RELEASE'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    testImplementation(<span class="string">'org.springframework.boot:spring-boot-starter-test'</span>) &#123;</span><br><span class="line">        exclude <span class="string">group:</span> <span class="string">'org.junit.vintage'</span>, <span class="string">module:</span> <span class="string">'junit-vintage-engine'</span></span><br><span class="line">    &#125;</span><br><span class="line">    testImplementation <span class="string">'io.projectreactor:reactor-test'</span></span><br><span class="line">    <span class="comment">/* for rest docs */</span></span><br><span class="line">    testImplementation <span class="string">"org.springframework.restdocs:spring-restdocs-webtestclient:$&#123;springRestdocsVersion&#125;"</span></span><br><span class="line">    asciidoctorExtensions <span class="string">"org.springframework.restdocs:spring-restdocs-asciidoctor:$&#123;springRestdocsVersion&#125;"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test &#123;</span><br><span class="line">    outputs.dir snippetsDir</span><br><span class="line">    useJUnitPlatform()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">asciidoctor &#123;</span><br><span class="line">    configurations <span class="string">'asciidoctorExtensions'</span></span><br><span class="line">    dependsOn test</span><br><span class="line">    attributes <span class="string">'snippets'</span>: snippetsDir</span><br><span class="line">    inputs.dir snippetsDir</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bootJar &#123;</span><br><span class="line">    dependsOn asciidoctor</span><br><span class="line">    from(<span class="string">"$&#123;asciidoctor.outputDir&#125;"</span>) &#123;</span><br><span class="line">        into <span class="string">'static/docs'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="create-docs-asciidoc-directory"><a href="#create-docs-asciidoc-directory" class="headerlink" title="create docs/asciidoc/ directory"></a>create docs/asciidoc/ directory</h3><p>like this</p>
<p><img src="assets/20200427131513411.png" alt="directory_layout"></p>
<h3 id="index-adoc-amp-updateUser-adoc-e-g"><a href="#index-adoc-amp-updateUser-adoc-e-g" class="headerlink" title="index.adoc &amp; updateUser.adoc(e.g.)"></a>index.adoc &amp; updateUser.adoc(e.g.)</h3><p>index.adoc</p>
<figure class="highlight adoc"><table><tr><td class="code"><pre><span class="line"><span class="section">= Blog Restful API</span></span><br><span class="line">Purple Mystic;</span><br><span class="line"><span class="meta">:toc:</span> left</span><br><span class="line"><span class="meta">:toc-title:</span> Chapter</span><br><span class="line"><span class="meta">:doctype:</span> book</span><br><span class="line"><span class="meta">:icons:</span> font</span><br><span class="line"><span class="meta">:source-highlighter:</span> highlightjs</span><br><span class="line"><span class="meta">:sourcedir:</span> &#123;sourcedir&#125;/user</span><br><span class="line"></span><br><span class="line">include::createUser.adoc[]</span><br><span class="line">include::updateUser.adoc[]</span><br><span class="line">include::findUserById.adoc[]</span><br><span class="line">include::findAllUsers.adoc[]</span><br></pre></td></tr></table></figure>

<p>updateUser.adoc</p>
<figure class="highlight adoc"><table><tr><td class="code"><pre><span class="line"><span class="section">== *Backend: updateUser:*</span></span><br><span class="line"></span><br><span class="line"><span class="section">=== Curl request:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/curl-request.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== HTTP request:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/http-request.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== HTTP response:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/http-response.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== Request using HTTPie:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/httpie-request.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== Request body:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/request-body.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== Response body:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/response-body.adoc[]</span><br></pre></td></tr></table></figure>

<h3 id="Other-solution"><a href="#Other-solution" class="headerlink" title="Other solution"></a>Other solution</h3><ul>
<li>remove <code>:sourcedir: {sourcedir}/user</code> from index.adoc</li>
<li>reconfigure asciidoctor task in build.gradle, like this</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">asciidoctor &#123;</span><br><span class="line">    configurations <span class="string">'asciidoctorExtensions'</span></span><br><span class="line">    dependsOn test</span><br><span class="line">    attributes <span class="string">'snippets'</span>: snippetsDir</span><br><span class="line">    inputs.dir snippetsDir</span><br><span class="line">    sources &#123;</span><br><span class="line">        include <span class="string">'**/index.adoc'</span></span><br><span class="line">    &#125;</span><br><span class="line">    baseDirFollowsSourceFile()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Unit-Tests"><a href="#Unit-Tests" class="headerlink" title="Unit Tests"></a>Unit Tests</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> team.star.blog.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.extension.ExtendWith;</span><br><span class="line"><span class="keyword">import</span> org.mockito.Mockito;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.mock.mockito.MockBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.restdocs.RestDocumentationContextProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.restdocs.RestDocumentationExtension;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.reactive.server.WebTestClient;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Flux;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"><span class="keyword">import</span> team.star.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> team.star.blog.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.mockito.Mockito.when;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.operation.preprocess.Preprocessors.prettyPrint;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.request.RequestDocumentation.parameterWithName;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.request.RequestDocumentation.pathParameters;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.document;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.documentationConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFluxTest</span>(UserController<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ExtendWith</span>(<span class="title">RestDocumentationExtension</span>.<span class="title">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">UserControllerTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext context;</span><br><span class="line">    <span class="keyword">private</span> WebTestClient client;</span><br><span class="line">    <span class="meta">@MockBean</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeEach</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setUp</span><span class="params">(RestDocumentationContextProvider provider)</span> </span>&#123;</span><br><span class="line">        client = WebTestClient.bindToApplicationContext(context)</span><br><span class="line">                .configureClient()</span><br><span class="line">                .filter(</span><br><span class="line">                        documentationConfiguration(provider)</span><br><span class="line">                                .operationPreprocessors()</span><br><span class="line">                                .withRequestDefaults(prettyPrint())</span><br><span class="line">                                .withResponseDefaults(prettyPrint())</span><br><span class="line">                )</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        User u1 = User.builder().id(<span class="number">1</span>).name(<span class="string">"Mystic"</span>).build();</span><br><span class="line">        User u2 = User.builder().id(<span class="number">2</span>).name(<span class="string">"Ran"</span>).build();</span><br><span class="line"></span><br><span class="line">        when(userService.findAll()).thenReturn(Flux.fromIterable(List.of(u1, u2)));</span><br><span class="line">        when(userService.findById(Mockito.anyInt())).thenReturn(Mono.just(u1));</span><br><span class="line">        when(userService.save(Mockito.any(User<span class="class">.<span class="keyword">class</span>))).<span class="title">thenReturn</span>(<span class="title">Mono</span>.<span class="title">just</span>(<span class="title">u2</span>))</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        client.get().uri(<span class="string">"/user/&#123;id&#125;"</span>, <span class="number">1</span>)</span><br><span class="line">                .exchange()</span><br><span class="line">                .expectStatus().isOk()</span><br><span class="line">                .expectBody(User<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">                .consumeWith(document("findUserById",</span><br><span class="line">                        pathParameters(parameterWithName(<span class="string">"id"</span>).description(<span class="string">"User ID"</span>))</span><br><span class="line">                ));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findAllUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        client.get().uri(<span class="string">"/user"</span>).exchange()</span><br><span class="line">                .expectStatus().isOk()</span><br><span class="line">                .expectBodyList(User<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">                .consumeWith(document("findAllUsers"));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">createUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User u3 = User.builder().name(<span class="string">"cc"</span>).build();</span><br><span class="line">        client.post().uri(<span class="string">"/user"</span>)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON)</span><br><span class="line">                .accept(MediaType.APPLICATION_JSON)</span><br><span class="line">                .body(Mono.just(u3), User<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">                .<span class="title">exchange</span>()</span></span><br><span class="line"><span class="class">                .<span class="title">expectStatus</span>().<span class="title">isCreated</span>()</span></span><br><span class="line"><span class="class">                .<span class="title">expectBody</span>()</span></span><br><span class="line">                .jsonPath("$.id").isEqualTo(2)</span><br><span class="line">                .consumeWith(document(<span class="string">"createUser"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User u2 = User.builder().id(<span class="number">2</span>).name(<span class="string">"cc"</span>).build();</span><br><span class="line">        client.patch().uri(<span class="string">"/user"</span>)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON)</span><br><span class="line">                .accept(MediaType.APPLICATION_JSON)</span><br><span class="line">                .body(Mono.just(u2), User<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">                .<span class="title">exchange</span>()</span></span><br><span class="line"><span class="class">                .<span class="title">expectStatus</span>().<span class="title">isOk</span>()</span></span><br><span class="line"><span class="class">                .<span class="title">expectBody</span>()</span></span><br><span class="line">                .jsonPath("$.name").isEqualTo("Ran")</span><br><span class="line">                .consumeWith(document(<span class="string">"updateUser"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><p><a href="https://github.com/PurpleMystic-star/blog-backend" target="_blank" rel="noopener">https://github.com/PurpleMystic-star/blog-backend</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA对@Autowired的使用提示警告</title>
    <url>/autowired-and-resource.html</url>
    <content><![CDATA[<h1 id="idea警告信息"><a href="#idea警告信息" class="headerlink" title="idea警告信息"></a>idea警告信息</h1><pre><code>Spring Team recommends: &quot;Always use constructor based dependency injection in your beans. Always use assertions for mandatory dependencies&quot;.
Spring Team建议：“在你的bean中,使用基于构造函数的依赖注入;并且使用强制依赖关系的断言”。</code></pre><h1 id="被警告的代码"><a href="#被警告的代码" class="headerlink" title="被警告的代码"></a>被警告的代码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="Spring-Team推荐的写法"><a href="#Spring-Team推荐的写法" class="headerlink" title="Spring Team推荐的写法"></a>Spring Team推荐的写法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserController</span><span class="params">(UserService userService)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userService = userService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>Spring Team推荐使用构造器注入,我猜测是java变量初始化顺序的原因
Java变量的初始化顺序为：静态变量或静态代码块–&gt;实例变量或初始化代码块–&gt;构造方法 - &gt;@Autowired</code></pre><h1 id="或者使用-Resource"><a href="#或者使用-Resource" class="headerlink" title="或者使用@Resource"></a>或者使用@Resource</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure>
<h1 id="简析-Resource和-Autowired"><a href="#简析-Resource和-Autowired" class="headerlink" title="简析@Resource和@Autowired"></a>简析@Resource和@Autowired</h1><h2 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h2><pre><code>默认按照byName自动注入,由J2EE提供,需要导入javax.annotation.Resource
它有两个重要的属性name和type,而Spring将@Resource注解的name属性解析为bean的名字,而type属性则解析为bean的类型
所以,如果使用name属性,则使用byName的自动注入策略,而使用type属性时则使用byType自动注入策略
如果name和type属性都未指定,则默认byName注入,byName未找到时,会继续采用byType注入</code></pre><h2 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h2><pre><code>采用byType自动注入,由Spring提供,需要导入org.springframework.beans.factory.annotation.Autowired
默认情况要求对象必须存在,如果需要为null,可以设置它的required=true
如果接口存在多个实现类,我们依然可以byName自动注入:通过与@Qualifier搭配使用
即先byType,byType匹配到多个时,再通过byName</code></pre><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier</span>(<span class="string">"userServiceForXXX"</span>)</span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>BP神经网络算法(python实现)</title>
    <url>/bpnn.html</url>
    <content><![CDATA[<h1 id="BPNN"><a href="#BPNN" class="headerlink" title="BPNN"></a>BPNN</h1><pre><code>神经网络是一种运算模型，由大量的节点（或称神经元）之间相互联接构成。
每个节点代表一种特定的输出函数，称为激励函数（activation function）。
每两个节点间的连接都代表一个对于通过该连接信号的加权值，称之为权重，这相当于人工神经网络的记忆。
网络的输出则依网络的连接方式，权重值和激励函数的不同而不同。
而网络自身通常都是对自然界某种算法或者函数的逼近，也可能是对一种逻辑策略的表达。

神经网络主要有以下几种类型: 前向型、反馈型、随机型和竞争型。
BPNN,Back Propagation Neural Network,属于前向型。
前向型:
    前馈神经网络是指神经元分层排列，由输入层，隐藏层和输出层构成，其中隐藏层可能会有多层。
    这种神经网络的每一层的神经元只接受前一层神经元的输入，后面的层对于前面的层没有信号反馈。
    每一层对于输入数据进行一定的转换，然后将输出结果作为下一层的输入，直到最后输出结果。</code></pre><a id="more"></a>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/23 8:41</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rand</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        生成[a,b)区间内的随机数</span></span><br><span class="line"><span class="string">    :param a:</span></span><br><span class="line"><span class="string">    :param b:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> (b - a) * random.random() + a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_matrix</span><span class="params">(m, n, fill=<span class="number">0.</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        生成m*n的矩阵,默认是零矩阵</span></span><br><span class="line"><span class="string">    :param m:</span></span><br><span class="line"><span class="string">    :param n:</span></span><br><span class="line"><span class="string">    :param fill:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    matrix = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">        matrix.append([fill] * n)</span><br><span class="line">    <span class="keyword">return</span> matrix</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        S型函数:Log-sigmoid和Tan-sigmoid[这里采用Log-sigmoid]</span></span><br><span class="line"><span class="string">    :param x:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1.0</span> + math.exp(-x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid_derivative</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        S型函数Log-sigmoid的导数</span></span><br><span class="line"><span class="string">    :param x:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> x * (<span class="number">1</span> - x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BPNeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.input_node = <span class="number">0</span></span><br><span class="line">        self.hidden_node = <span class="number">0</span></span><br><span class="line">        self.output_node = <span class="number">0</span></span><br><span class="line">        self.input_cells = []</span><br><span class="line">        self.hidden_cells = []</span><br><span class="line">        self.output_cells = []</span><br><span class="line">        self.input_weights = []</span><br><span class="line">        self.output_weights = []</span><br><span class="line">        self.input_correction = []</span><br><span class="line">        self.output_correction = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setup</span><span class="params">(self, ni, nh, no)</span>:</span></span><br><span class="line">        <span class="comment"># 输入层、隐藏层、输出层的节点(数)</span></span><br><span class="line">        self.input_node = ni + <span class="number">1</span>  <span class="comment"># 增加一个偏差节点</span></span><br><span class="line">        self.hidden_node = nh</span><br><span class="line">        self.output_node = no</span><br><span class="line">        <span class="comment"># init cells 激活神经网络的所有节点</span></span><br><span class="line">        self.input_cells = [<span class="number">1.0</span>] * self.input_node</span><br><span class="line">        self.hidden_cells = [<span class="number">1.0</span>] * self.hidden_node</span><br><span class="line">        self.output_cells = [<span class="number">1.0</span>] * self.output_node</span><br><span class="line">        <span class="comment"># init weights 建立输入层到隐含层权重和隐含层到输出层的权重</span></span><br><span class="line">        self.input_weights = make_matrix(self.input_node, self.hidden_node)</span><br><span class="line">        self.output_weights = make_matrix(self.hidden_node, self.output_node)</span><br><span class="line">        <span class="comment"># random activate</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.input_node):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">                self.input_weights[i][h] = rand(<span class="number">-0.2</span>, <span class="number">0.2</span>)</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> range(self.output_node):</span><br><span class="line">                self.output_weights[h][o] = rand(<span class="number">-2.0</span>, <span class="number">2.0</span>)</span><br><span class="line">        <span class="comment"># init correction matrix 建立动量因子</span></span><br><span class="line">        self.input_correction = make_matrix(self.input_node, self.hidden_node)</span><br><span class="line">        self.output_correction = make_matrix(self.hidden_node, self.output_node)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, inputs)</span>:</span></span><br><span class="line">        <span class="comment"># activate input layer</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.input_node - <span class="number">1</span>):</span><br><span class="line">            self.input_cells[i] = inputs[i]</span><br><span class="line">        <span class="comment"># activate hidden layer</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">            total = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(self.input_node):</span><br><span class="line">                total += self.input_cells[i] * self.input_weights[i][j]</span><br><span class="line">            self.hidden_cells[j] = sigmoid(total)</span><br><span class="line">        <span class="comment"># activate output layer</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(self.output_node):</span><br><span class="line">            total = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">                total += self.hidden_cells[j] * self.output_weights[j][k]</span><br><span class="line">            self.output_cells[k] = sigmoid(total)</span><br><span class="line">        <span class="keyword">return</span> self.output_cells[:]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">back_propagation</span><span class="params">(self, case, label, learn, correct)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            反向传播</span></span><br><span class="line"><span class="string">        :param case: 样本</span></span><br><span class="line"><span class="string">        :param label: 期望样本输出值</span></span><br><span class="line"><span class="string">        :param learn: 学习速率</span></span><br><span class="line"><span class="string">        :param correct: 动量因子</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># feed forward</span></span><br><span class="line">        self.predict(case)</span><br><span class="line">        <span class="comment"># get output layer error</span></span><br><span class="line">        output_deltas = [<span class="number">0.0</span>] * self.output_node</span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> range(self.output_node):</span><br><span class="line">            error = label[o] - self.output_cells[o]</span><br><span class="line">            output_deltas[o] = sigmoid_derivative(self.output_cells[o]) * error</span><br><span class="line">        <span class="comment"># get hidden layer error</span></span><br><span class="line">        hidden_deltas = [<span class="number">0.0</span>] * self.hidden_node</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">            error = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> range(self.output_node):</span><br><span class="line">                error += output_deltas[o] * self.output_weights[h][o]</span><br><span class="line">            hidden_deltas[h] = sigmoid_derivative(self.hidden_cells[h]) * error</span><br><span class="line">        <span class="comment"># update output weights</span></span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> range(self.output_node):</span><br><span class="line">                change = output_deltas[o] * self.hidden_cells[h]</span><br><span class="line">                self.output_weights[h][o] += learn * change + correct * self.output_correction[h][o]</span><br><span class="line">                self.output_correction[h][o] = change</span><br><span class="line">        <span class="comment"># update input weights</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.input_node):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> range(self.hidden_node):</span><br><span class="line">                change = hidden_deltas[h] * self.input_cells[i]</span><br><span class="line">                self.input_weights[i][h] += learn * change + correct * self.input_correction[i][h]</span><br><span class="line">                self.input_correction[i][h] = change</span><br><span class="line">        <span class="comment"># get global error</span></span><br><span class="line">        error = <span class="number">0.0</span></span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> range(len(label)):</span><br><span class="line">            error += <span class="number">0.5</span> * (label[o] - self.output_cells[o]) ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> error</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(self, cases, labels, limit=<span class="number">10000</span>, learn=<span class="number">0.05</span>, correct=<span class="number">0.1</span>)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(limit):</span><br><span class="line">            error = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cases)):</span><br><span class="line">                label = labels[i]</span><br><span class="line">                case = cases[i]</span><br><span class="line">                error += self.back_propagation(case, label, learn, correct)</span><br><span class="line">        <span class="comment"># 返回训练好的权重、动量因子等信息，便于BP网络的保存</span></span><br><span class="line">        <span class="keyword">return</span> dict(input_node=self.input_node, hidden_node=self.hidden_node, output_node=self.output_node,</span><br><span class="line">                    input_cells=self.input_cells, hidden_cells=self.hidden_cells, output_cells=self.output_cells,</span><br><span class="line">                    input_weights=self.input_weights, output_weights=self.output_weights,</span><br><span class="line">                    input_correction=self.input_correction, output_correction=self.output_correction)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        cases = [</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.321</span>, <span class="number">0</span>, <span class="number">0.54</span>, <span class="number">0.337</span>, <span class="number">0.43</span>, <span class="number">0.64</span>, <span class="number">0</span>, <span class="number">0.618</span>, <span class="number">0.25</span>, <span class="number">0.36</span>, <span class="number">0.321</span>, <span class="number">0</span>, <span class="number">0.54</span>, <span class="number">0.337</span>, <span class="number">0.43</span>, <span class="number">0.64</span>, <span class="number">0</span>, <span class="number">0.618</span>,</span><br><span class="line">             <span class="number">0.25</span>, <span class="number">0.374</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.39</span>, <span class="number">0.43</span>, <span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.55</span>, <span class="number">0.61</span>, <span class="number">0.21</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.39</span>, <span class="number">0.43</span>, <span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.55</span>, <span class="number">0.61</span>, <span class="number">0.21</span>, <span class="number">1</span>,</span><br><span class="line">             <span class="number">0.21</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0.66</span>, <span class="number">0</span>, <span class="number">0.13</span>, <span class="number">0.54</span>, <span class="number">0.32</span>, <span class="number">0.33</span>, <span class="number">0.25</span>, <span class="number">0.34</span>, <span class="number">0.52</span>, <span class="number">1</span>, <span class="number">0.66</span>, <span class="number">0</span>, <span class="number">0.13</span>, <span class="number">0.54</span>, <span class="number">0.32</span>, <span class="number">0.33</span>, <span class="number">0.25</span>, <span class="number">0.34</span>,</span><br><span class="line">             <span class="number">0.86</span>],</span><br><span class="line">            [<span class="number">0.81</span>, <span class="number">0.31</span>, <span class="number">0.23</span>, <span class="number">0.12</span>, <span class="number">0.32</span>, <span class="number">0.15</span>, <span class="number">0.56</span>, <span class="number">0.12</span>, <span class="number">0.33</span>, <span class="number">0.33</span>, <span class="number">0.42</span>, <span class="number">0.31</span>, <span class="number">0.23</span>, <span class="number">0.12</span>, <span class="number">0.32</span>, <span class="number">0.15</span>, <span class="number">0.56</span>, <span class="number">0.12</span>,</span><br><span class="line">             <span class="number">0.33</span>, <span class="number">0.33</span>, <span class="number">0.321</span>],</span><br><span class="line">            [<span class="number">0.61</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.52</span>, <span class="number">0.55</span>, <span class="number">0.56</span>, <span class="number">0.25</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.76</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.52</span>, <span class="number">0.55</span>, <span class="number">0.56</span>, <span class="number">0.25</span>, <span class="number">1</span>,</span><br><span class="line">             <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.62</span>],</span><br><span class="line">            [<span class="number">0.37</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.832</span>, <span class="number">0.643</span>, <span class="number">0.931</span>, <span class="number">0.821</span>, <span class="number">0.21</span>, <span class="number">0.235</span>, <span class="number">0.841</span>, <span class="number">0.213</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.832</span>, <span class="number">0.643</span>, <span class="number">0.931</span>, <span class="number">0.821</span>, <span class="number">0.21</span>,</span><br><span class="line">             <span class="number">0.235</span>, <span class="number">0.841</span>, <span class="number">0.87</span>],</span><br><span class="line">            [<span class="number">0.42</span>, <span class="number">0.41</span>, <span class="number">0.32</span>, <span class="number">0.451</span>, <span class="number">0.324</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.543</span>, <span class="number">0.328</span>, <span class="number">0.642</span>, <span class="number">0.872</span>, <span class="number">0.41</span>, <span class="number">0.32</span>, <span class="number">0.451</span>, <span class="number">0.324</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.543</span>,</span><br><span class="line">             <span class="number">0.328</span>, <span class="number">0.642</span>, <span class="number">0.76</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.56</span>, <span class="number">0.43</span>, <span class="number">0.872</span>, <span class="number">0.432</span>, <span class="number">0.683</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.52</span>, <span class="number">0.9</span>, <span class="number">0.42</span>, <span class="number">0.56</span>, <span class="number">0.43</span>, <span class="number">0.872</span>, <span class="number">0.432</span>, <span class="number">0.683</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">             <span class="number">0.52</span>, <span class="number">0.9</span>, <span class="number">0.911</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.54</span>, <span class="number">0.62</span>, <span class="number">1</span>, <span class="number">0.24</span>, <span class="number">0.317</span>, <span class="number">0.58</span>, <span class="number">0.82</span>, <span class="number">0.432</span>, <span class="number">0.12</span>, <span class="number">0.9</span>, <span class="number">0.54</span>, <span class="number">0.62</span>, <span class="number">1</span>, <span class="number">0.24</span>, <span class="number">0.317</span>, <span class="number">0.58</span>, <span class="number">0.82</span>,</span><br><span class="line">             <span class="number">0.432</span>, <span class="number">0.12</span>, <span class="number">0.62</span>],</span><br><span class="line">            [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>, <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.661</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>,</span><br><span class="line">             <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.668</span>]</span><br><span class="line">        ]</span><br><span class="line">        labels = [[<span class="number">0.257</span>], [<span class="number">0.473</span>], [<span class="number">0.261</span>], [<span class="number">0.561</span>], [<span class="number">0.201</span>], [<span class="number">0.681</span>], [<span class="number">0.697</span>], [<span class="number">0.733</span>], [<span class="number">0.375</span>], [<span class="number">0.583</span>]]</span><br><span class="line">        self.setup(<span class="number">21</span>, <span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">        begin = datetime.datetime.now()</span><br><span class="line">        save_net = self.train(cases, labels, <span class="number">1000000</span>, <span class="number">0.1</span>, <span class="number">0.1</span>)</span><br><span class="line">        end = datetime.datetime.now()</span><br><span class="line">        print(<span class="string">'spend:'</span>, (end - begin))</span><br><span class="line">        <span class="comment"># 保存网络</span></span><br><span class="line">        <span class="comment"># with open('resource/bp_net.txt', 'wb') as fw:</span></span><br><span class="line">        <span class="comment">#     pickle.dump(save_net, fw, 0)</span></span><br><span class="line">        <span class="keyword">for</span> case <span class="keyword">in</span> cases:</span><br><span class="line">            print(self.predict(case))</span><br><span class="line">            <span class="comment"># print(self.predict(</span></span><br><span class="line">            <span class="comment">#     [1, 1, 1, 0.75, 0.833, 0.688, 0.858, 0.63, 0.859, 0, 0.322, 0.875,</span></span><br><span class="line">            <span class="comment"># 1, 0, 1, 1, 0.5, 0.834, 0.376, 0.233,1]))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    nn = BPNeuralNetwork()</span><br><span class="line">    <span class="comment"># nn.test()</span></span><br><span class="line">    <span class="comment"># 加载网络</span></span><br><span class="line">    trained_net = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'resource/bp_net.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> fr:</span><br><span class="line">        trained_net = pickle.load(fr)</span><br><span class="line">    nn.input_node = trained_net[<span class="string">'input_node'</span>]</span><br><span class="line">    nn.hidden_node = trained_net[<span class="string">'hidden_node'</span>]</span><br><span class="line">    nn.output_node = trained_net[<span class="string">'output_node'</span>]</span><br><span class="line">    nn.input_cells = trained_net[<span class="string">'input_cells'</span>]</span><br><span class="line">    nn.hidden_cells = trained_net[<span class="string">'hidden_cells'</span>]</span><br><span class="line">    nn.output_cells = trained_net[<span class="string">'output_cells'</span>]</span><br><span class="line">    nn.input_weights = trained_net[<span class="string">'input_weights'</span>]</span><br><span class="line">    nn.output_weights = trained_net[<span class="string">'output_weights'</span>]</span><br><span class="line">    nn.input_correction = trained_net[<span class="string">'input_correction'</span>]</span><br><span class="line">    nn.output_correction = trained_net[<span class="string">'output_correction'</span>]</span><br><span class="line">    predict_value = nn.predict(</span><br><span class="line">        [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>, <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.661</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>,</span><br><span class="line">         <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.668</span>])</span><br><span class="line">    print(predict_value)</span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><p><a href="https://github.com/mystic-cg/MachineLearning.git" target="_blank" rel="noopener">Github Source Code</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之java环境</title>
    <url>/build-server-java.html</url>
    <content><![CDATA[<h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><p>如果命令显示无权限,请加sudo,或是进入root用户;</p>
<p>若是目录无权限访问,请给相关用户设置相应的访问权限-rwx</p>
<h2 id="查看是否存在jdk环境"><a href="#查看是否存在jdk环境" class="headerlink" title="查看是否存在jdk环境"></a>查看是否存在jdk环境</h2><p>(根据需求决定是否卸载已存在的环境)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list installed |grep java</span><br><span class="line">yum -y remove java-1.8.0-openjdk*  <span class="comment"># 匹配所有以java-1.8.0-openjdk开头的文件,然后卸载</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y list java*  <span class="comment"># 查看jdk软件包列表</span></span><br><span class="line">yum install java-1.8.0-openjdk*  <span class="comment"># 安装所有java程序</span></span><br><span class="line"><span class="comment"># 如果不是所有程序都需要,也可仅执行如下命令</span></span><br><span class="line">yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel</span><br><span class="line">java -version  <span class="comment"># 查看jdk版本号</span></span><br></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/profile <span class="comment"># 编辑该文件</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># set java environment  </span><br><span class="line">JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jre-1.8.0-openjdk-1.8.0.144-0.b01.el7_4.x86_64</span><br><span class="line">PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin  </span><br><span class="line">CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar  </span><br><span class="line">export JAVA_HOME  CLASSPATH  PATH</span><br></pre></td></tr></table></figure>
<p>退出并保存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">. /etc/profile   <span class="comment"># 注意:那里是需要空格的</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span>  <span class="comment"># 查看</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CLASSPATH</span>  <span class="comment"># 查看</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之mysql安装</title>
    <url>/build-server-mysql.html</url>
    <content><![CDATA[<h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><h2 id="下载mysql的repo源"><a href="#下载mysql的repo源" class="headerlink" title="下载mysql的repo源"></a>下载mysql的repo源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="安装mysql的rpm包"><a href="#安装mysql的rpm包" class="headerlink" title="安装mysql的rpm包"></a>安装mysql的rpm包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="安装mysql-1"><a href="#安装mysql-1" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum install mysql-server</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="重置mysql密码"><a href="#重置mysql密码" class="headerlink" title="重置mysql密码"></a>重置mysql密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root</span><br></pre></td></tr></table></figure>
<p>登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘<br>原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo chown -R root:root /var/lib/mysql</span><br></pre></td></tr></table></figure>
<p>重启mysql服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service mysqld restart</span><br></pre></td></tr></table></figure>
<p>接下来是登录mysql(有两种情况)</p>
<h3 id="直接登录成功"><a href="#直接登录成功" class="headerlink" title="直接登录成功"></a>直接登录成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root  //直接回车进入mysql控制台</span><br><span class="line">mysql &gt; use mysql;</span><br><span class="line">mysql &gt; update user <span class="built_in">set</span> password=password(<span class="string">'123456'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line">mysql &gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure>
<h3 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h3><p>登录失败:是因为密码错误,不是默认的空密码,<br>而是在安装时,mysql默认分配了随机密码<br>如果你的安装信息是详细显示的,那么你是可以在之前的安装信息中,找到随机密码<br>找不到,那就继续如下操作:</p>
<p>1.修改MySQL的登录设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.cnf // 在[mysqld]的段中加上一句：skip-grant-tables</span></span><br></pre></td></tr></table></figure>
<p>2.重新启动mysql,并登录(mysql5.7,password字段不存在了,而是authentication_string)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># service mysqld restart</span></span><br><span class="line"><span class="comment"># mysql -uroot -p//回车</span></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">'123456'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span> and Host = <span class="string">'localhost'</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure>
<p>3.还原/etc/my.cnf(将skip-grant-tables删除)</p>
<p>4.重启mysql,即可使用新密码登录了</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之tomcat安装</title>
    <url>/build-server-tomcat.html</url>
    <content><![CDATA[<h1 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h1><h2 id="安装tomcat-1"><a href="#安装tomcat-1" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install tomcat</span><br></pre></td></tr></table></figure>
<h2 id="安装管理包"><a href="#安装管理包" class="headerlink" title="安装管理包"></a>安装管理包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install tomcat-webapps tomcat-admin-webapps</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装在线文档"><a href="#安装在线文档" class="headerlink" title="安装在线文档"></a>安装在线文档</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install tomcat-docs-webapp tomcat-javadoc</span><br></pre></td></tr></table></figure>
<h2 id="配置tomcat管理页面"><a href="#配置tomcat管理页面" class="headerlink" title="配置tomcat管理页面"></a>配置tomcat管理页面</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /usr/share/tomcat/conf/tomcat-users.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;tomcat-users&gt;</span><br><span class="line">    &lt;user username&#x3D;&quot;admin&quot; password&#x3D;&quot;admin&quot; roles&#x3D;&quot;manager-gui,admin-gui&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;tomcat-users&gt;</span><br></pre></td></tr></table></figure>
<h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service tomcat restart</span><br></pre></td></tr></table></figure>
<h2 id="访问试试"><a href="#访问试试" class="headerlink" title="访问试试"></a>访问试试</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;yourIP:8080</span><br><span class="line">http:&#x2F;&#x2F;yourIP:8080&#x2F;manager&#x2F;html</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之zsh安装</title>
    <url>/build-server-zsh.html</url>
    <content><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><pre><code>root下操作</code></pre><h2 id="安装zsh-1"><a href="#安装zsh-1" class="headerlink" title="安装zsh"></a>安装zsh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install zsh</span><br></pre></td></tr></table></figure>
<h2 id="切换bash至zsh"><a href="#切换bash至zsh" class="headerlink" title="切换bash至zsh"></a>切换bash至zsh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">         __                                     __   </span><br><span class="line">  ____  / /_     ____ ___  __  __   ____  _____/ /_  </span><br><span class="line"> / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \ </span><br><span class="line">/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / </span><br><span class="line">\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/  </span><br><span class="line">                        /____/                       ....is now installed!</span><br><span class="line">Please look over the ~/.zshrc file to select plugins, themes, and options.</span><br><span class="line"></span><br><span class="line">p.s. Follow us at https://twitter.com/ohmyzsh.</span><br><span class="line"></span><br><span class="line">p.p.s. Get stickers and t-shirts at http://shop.planetargon.com.</span><br></pre></td></tr></table></figure>
<h2 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h2><pre><code>出现如上图案,表示修改成功了
如果你需要继续修改zsh的主题,或是添加插件
可以在~/.zshrc文件中修改</code></pre>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>决策树算法(python实现)</title>
    <url>/decision-tree.html</url>
    <content><![CDATA[<h1 id="Decision-Tree"><a href="#Decision-Tree" class="headerlink" title="Decision Tree"></a>Decision Tree</h1><pre><code>decision tree
核心思想:
    一种树结构（可以是二叉树或非二叉树）
    其每个非叶节点表示一个特征属性上的测试，
    每个分支代表这个特征属性在某个值域上的输出，
    而每个叶节点存放一个类别
优点:
    计算复杂度不高,输出结果易于理解,对中间值缺失不敏感,可以处理不相关特征数据
缺点：
    可能会产生过度匹配问题
适用数据范围：
    数值型和标称型</code></pre><a id="more"></a>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/16 15:59</span></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tree_plotter <span class="keyword">import</span> create_plot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data_set</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        数据集:</span></span><br><span class="line"><span class="string">            1.必须是一种由列元素组成的列表,而且所有列表元素均具有相同的数据长度</span></span><br><span class="line"><span class="string">            2.数据的最后一列或者每一个实例的最后一个元素是当前实例的类别标签</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    data_set = [</span><br><span class="line">        [<span class="number">1</span>, <span class="number">1</span>, <span class="string">'yes'</span>],</span><br><span class="line">        [<span class="number">1</span>, <span class="number">1</span>, <span class="string">'yes'</span>],</span><br><span class="line">        [<span class="number">1</span>, <span class="number">0</span>, <span class="string">'no'</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="string">'no'</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="string">'no'</span>]</span><br><span class="line">    ]</span><br><span class="line">    labels = [<span class="string">'no surfacing'</span>, <span class="string">'flippers'</span>]</span><br><span class="line">    <span class="keyword">return</span> data_set, labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_shannon_entropy</span><span class="params">(data_set)</span>:</span></span><br><span class="line">    num_entries = len(data_set)</span><br><span class="line">    label_counts = &#123;&#125;</span><br><span class="line">    <span class="comment"># 对各类别出现的次数,进行统计</span></span><br><span class="line">    <span class="keyword">for</span> feat_vector <span class="keyword">in</span> data_set:</span><br><span class="line">        current_label = feat_vector[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> current_label <span class="keyword">not</span> <span class="keyword">in</span> label_counts.keys():</span><br><span class="line">            label_counts[current_label] = <span class="number">0</span></span><br><span class="line">        label_counts[current_label] += <span class="number">1</span></span><br><span class="line">    shannon_entropy = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> label_counts:</span><br><span class="line">        <span class="comment"># 计算该分类的概率</span></span><br><span class="line">        probability = label_counts[key] / num_entries</span><br><span class="line">        <span class="comment"># 通过循环,将各分类的信息期望值相加</span></span><br><span class="line">        shannon_entropy -= probability * log(probability, <span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 返回香农熵</span></span><br><span class="line">    <span class="keyword">return</span> shannon_entropy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_shannon_entropy2</span><span class="params">(data_set)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        通过列表推导式,及Counter,实现香农熵的计算</span></span><br><span class="line"><span class="string">    :param data_set:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 取出'yes','yes','no'等数据放到数组中</span></span><br><span class="line">    class_count = [sample[<span class="number">-1</span>] <span class="keyword">for</span> sample <span class="keyword">in</span> data_set]</span><br><span class="line">    <span class="comment"># 获取数据集长度</span></span><br><span class="line">    length = len(data_set)</span><br><span class="line">    <span class="comment"># 对'yes','no'等各类别出现的次数,进行统计</span></span><br><span class="line">    class_count = Counter(class_count)</span><br><span class="line">    shannon_entropy = <span class="number">0.</span></span><br><span class="line">    <span class="comment"># 计算香农熵</span></span><br><span class="line">    <span class="keyword">for</span> times <span class="keyword">in</span> class_count.values():</span><br><span class="line">        shannon_entropy -= times / length * log(times / length, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> shannon_entropy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split_data_set</span><span class="params">(data_set, axis, value)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        划分数据集</span></span><br><span class="line"><span class="string">    :param data_set: 待划分的数据集</span></span><br><span class="line"><span class="string">    :param axis: 划分数据集的特征</span></span><br><span class="line"><span class="string">    :param value: 需要返回的特征的值</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        append和extend的区别</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a = [1,2,3]</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; b = [4,5,6]</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a.append(b)</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a</span></span><br><span class="line"><span class="string">        [1, 2, 3, [4, 5, 6]]</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a.extend(b)</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a</span></span><br><span class="line"><span class="string">        [1, 2, 3, [4, 5, 6], 4, 5, 6]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    divided_data_set = []</span><br><span class="line">    <span class="keyword">for</span> feature_vector <span class="keyword">in</span> data_set:</span><br><span class="line">        <span class="comment"># if true,就将该值remove,同时添加进divided_data_set</span></span><br><span class="line">        <span class="keyword">if</span> feature_vector[axis] == value:</span><br><span class="line">            reduced_feature_vector = feature_vector[:axis]</span><br><span class="line">            reduced_feature_vector.extend(feature_vector[axis + <span class="number">1</span>:])</span><br><span class="line">            divided_data_set.append(reduced_feature_vector)</span><br><span class="line">    <span class="keyword">return</span> divided_data_set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">choose_best_feature2split</span><span class="params">(data_set)</span>:</span></span><br><span class="line">    <span class="comment"># 获取特征值的数量</span></span><br><span class="line">    num_features = len(data_set[<span class="number">0</span>]) - <span class="number">1</span></span><br><span class="line">    <span class="comment"># 计算原始香农熵</span></span><br><span class="line">    base_entropy = calc_shannon_entropy2(data_set)</span><br><span class="line">    <span class="comment"># 最佳信息增益</span></span><br><span class="line">    best_info_gain = <span class="number">0.</span></span><br><span class="line">    <span class="comment"># 最佳特征值的位置索引</span></span><br><span class="line">    best_feature = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_features):</span><br><span class="line">        <span class="comment"># 创建唯一的分类标签列表</span></span><br><span class="line">        feature_list = [example[i] <span class="keyword">for</span> example <span class="keyword">in</span> data_set]</span><br><span class="line">        unique_vals = set(feature_list)</span><br><span class="line">        <span class="comment"># 计算每种划分方式的信息熵</span></span><br><span class="line">        new_entropy = <span class="number">0.</span></span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> unique_vals:</span><br><span class="line">            sub_data_set = split_data_set(data_set, i, value)</span><br><span class="line">            probability = len(sub_data_set) / len(data_set)</span><br><span class="line">            new_entropy += probability * calc_shannon_entropy2(sub_data_set)</span><br><span class="line">        <span class="comment"># 计算最好的信息增益</span></span><br><span class="line">        <span class="comment"># print('原始信息熵为%f' % base_entropy)</span></span><br><span class="line">        <span class="comment"># print('新的信息熵为%f' % new_entropy)</span></span><br><span class="line">        info_gain = base_entropy - new_entropy</span><br><span class="line">        <span class="comment"># print('按照第%d个特征属性划分,信息增益为%f' % (i, info_gain))</span></span><br><span class="line">        <span class="keyword">if</span> info_gain &gt; best_info_gain:</span><br><span class="line">            best_info_gain = info_gain</span><br><span class="line">            best_feature = i</span><br><span class="line">    <span class="comment"># print('故最佳特征属性的索引为%d' % best_feature)</span></span><br><span class="line">    <span class="keyword">return</span> best_feature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">majority_counter</span><span class="params">(class_list)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        如果数据集已经处理了所有属性,但是类标签依然不是唯一的,我们需要决定如何定义该叶子节点</span></span><br><span class="line"><span class="string">        此时,我们采用多数表决的方式,决定该叶子节点的分类</span></span><br><span class="line"><span class="string">    :param class_list:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    class_count = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> vote <span class="keyword">in</span> class_list:</span><br><span class="line">        <span class="keyword">if</span> vote <span class="keyword">not</span> <span class="keyword">in</span> class_count.keys():</span><br><span class="line">            class_count[vote] = <span class="number">0</span></span><br><span class="line">        class_count[vote] += <span class="number">1</span></span><br><span class="line">    sorted_class_count = sorted(class_count.items(), key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sorted_class_count[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify</span><span class="params">(input_tree, feature_labels, test_vector)</span>:</span></span><br><span class="line">    first_str = list(input_tree.keys())[<span class="number">0</span>]</span><br><span class="line">    second_dict = input_tree[first_str]</span><br><span class="line">    <span class="comment"># 将标签字符串转换为索引</span></span><br><span class="line">    feature_index = feature_labels.index(first_str)</span><br><span class="line">    class_label = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> second_dict.keys():</span><br><span class="line">        <span class="keyword">if</span> test_vector[feature_index] == key:</span><br><span class="line">            <span class="keyword">if</span> type(second_dict[key]).__name__ == <span class="string">'dict'</span>:</span><br><span class="line">                class_label = classify(second_dict[key], feature_labels, test_vector)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                class_label = second_dict[key]</span><br><span class="line">    <span class="keyword">return</span> class_label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">store_tree</span><span class="params">(input_tree, filename)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> fw:</span><br><span class="line">        <span class="comment"># 0：ASCII协议，所序列化的对象使用可打印的ASCII码表示</span></span><br><span class="line">        <span class="comment"># 1：老式的二进制协议</span></span><br><span class="line">        <span class="comment"># 2：2.3版本引入的新二进制协议，较以前的更高效</span></span><br><span class="line">        <span class="comment"># 其中协议0和1兼容老版本的python</span></span><br><span class="line">        pickle.dump(input_tree, fw, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grab_tree</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> read:</span><br><span class="line">        <span class="keyword">return</span> pickle.load(read)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tree</span><span class="params">(data_set, labels)</span>:</span></span><br><span class="line">    <span class="comment"># 获取类别列表</span></span><br><span class="line">    class_list = [example[<span class="number">-1</span>] <span class="keyword">for</span> example <span class="keyword">in</span> data_set]</span><br><span class="line">    <span class="comment"># 类别完全相同,则停止继续划分</span></span><br><span class="line">    <span class="keyword">if</span> class_list.count(class_list[<span class="number">0</span>]) == len(class_list):</span><br><span class="line">        <span class="comment"># 若只有一类,则某个类别标签的数量,应该和它的数据长度相等</span></span><br><span class="line">        <span class="keyword">return</span> class_list[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 遍历完所有特征时,类别标签还是不唯一,则返回出现次数最多的类别</span></span><br><span class="line">    <span class="keyword">if</span> len(data_set[<span class="number">0</span>]) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> majority_counter(class_list)</span><br><span class="line">    <span class="comment"># 最佳特征属性的索引</span></span><br><span class="line">    best_feature = choose_best_feature2split(data_set)</span><br><span class="line">    <span class="comment"># 最佳特征标记</span></span><br><span class="line">    best_feature_label = labels[best_feature]</span><br><span class="line">    <span class="comment"># 创建字典,存储决策树</span></span><br><span class="line">    my_tree = &#123;best_feature_label: &#123;&#125;&#125;</span><br><span class="line">    <span class="keyword">del</span> (labels[best_feature])</span><br><span class="line">    <span class="comment"># 获取该特征的所有的值</span></span><br><span class="line">    feature_values = [example[best_feature] <span class="keyword">for</span> example <span class="keyword">in</span> data_set]</span><br><span class="line">    unique_values = set(feature_values)</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> unique_values:</span><br><span class="line">        sub_labels = labels[:]</span><br><span class="line">        <span class="comment"># 递归不断创建分支</span></span><br><span class="line">        my_tree[best_feature_label][value] = create_tree(split_data_set(data_set, best_feature, value), sub_labels)</span><br><span class="line">    <span class="keyword">return</span> my_tree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># my_data_set, my_labels = create_data_set()</span></span><br><span class="line">    <span class="comment"># print(my_data_set)</span></span><br><span class="line">    <span class="comment"># print(my_labels)</span></span><br><span class="line">    <span class="comment"># my_shannon_entropy = calc_shannon_entropy(my_data_set)</span></span><br><span class="line">    <span class="comment"># print(my_shannon_entropy)</span></span><br><span class="line">    <span class="comment"># print(calc_shannon_entropy2(my_data_set))</span></span><br><span class="line">    <span class="comment"># decision_tree = create_tree(my_data_set, my_labels)</span></span><br><span class="line">    <span class="comment"># store_tree(decision_tree, 'resource/classifier_storage.txt')</span></span><br><span class="line">    <span class="comment"># print(decision_tree)</span></span><br><span class="line">    <span class="comment"># new_tree = grab_tree('resource/classifier_storage.txt')</span></span><br><span class="line">    <span class="comment"># print('acquire tree from file:', new_tree)</span></span><br><span class="line">    <span class="comment"># # 因为my_labels已经在create_tree方法中被改变,故我们生成个新的</span></span><br><span class="line">    <span class="comment"># my_data_set, my_labels = create_data_set()</span></span><br><span class="line">    <span class="comment"># print(classify(decision_tree, my_labels, [1, 1]))</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'resource/lenses.txt'</span>) <span class="keyword">as</span> fr:</span><br><span class="line">        lenses = [instance.strip().split(<span class="string">'\t'</span>) <span class="keyword">for</span> instance <span class="keyword">in</span> fr.readlines()]</span><br><span class="line">        lenses_labels = [<span class="string">'age'</span>, <span class="string">'prescript'</span>, <span class="string">'astigmatic'</span>, <span class="string">'tearRate'</span>]</span><br><span class="line">        lenses_tree = create_tree(lenses, lenses_labels)</span><br><span class="line">        print(lenses)</span><br><span class="line">        print(lenses_labels)</span><br><span class="line">        print(lenses_tree)</span><br><span class="line">        create_plot(lenses_tree)</span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><p><a href="https://github.com/mystic-cg/MachineLearning.git" target="_blank" rel="noopener">Github Source Code</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>deploy ejb with restful service to jboss</title>
    <url>/deploy-ejb2jboss.html</url>
    <content><![CDATA[<blockquote>
<p>Wildfly: 18.0.1.Final</p>
<p>JDK: 11.0.2</p>
<p>Gradle: 5.6.2</p>
<p>Maven: 3.6.2</p>
<p>We’ll deploy an ear package with two war packages(One of them uses the rest service) to jboss. </p>
</blockquote>
<p><a href="https://github.com/mystic-cg/DeployEjb2JBoss" target="_blank" rel="noopener">Source code</a></p>
<a id="more"></a>

<h1 id="Here-is-the-project-structure"><a href="#Here-is-the-project-structure" class="headerlink" title="Here is the project structure"></a>Here is the project structure</h1><p><img src="assets/1571834311583.png" alt="1571834311583"></p>
<blockquote>
<p>The base is module ejb</p>
<p>Web and app modules both depend on ejb</p>
<p>ear includes web and app</p>
</blockquote>
<h1 id="root-build-gradle"><a href="#root-build-gradle" class="headerlink" title="root build.gradle"></a>root build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">group <span class="string">'individual.cc'</span></span><br><span class="line">version <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">subprojects &#123;</span><br><span class="line">    group <span class="string">'individual.cc'</span></span><br><span class="line">    version <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ejb-module-build-gradle"><a href="#ejb-module-build-gradle" class="headerlink" title="ejb module: build.gradle"></a>ejb module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'java'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compileOnly <span class="string">'javax:javaee-api:8.0.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ejb-module-session-bean"><a href="#ejb-module-session-bean" class="headerlink" title="ejb module: session bean"></a>ejb module: session bean</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.jar.bean.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ejb.Stateless;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Stateless</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleStatelessEjb</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello world, EJB"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="web-module-build-gradle"><a href="#web-module-build-gradle" class="headerlink" title="web module: build.gradle"></a>web module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'war'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    providedCompile project(<span class="string">':ejb'</span>)</span><br><span class="line"></span><br><span class="line">    compileOnly <span class="string">'javax:javaee-api:8.0.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="web-module-web-servlet"><a href="#web-module-web-servlet" class="headerlink" title="web module: web servlet"></a>web module: web servlet</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cc.jar.bean.session.SimpleStatelessEjb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ejb.EJB;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(&#123;<span class="string">"/"</span>, <span class="string">"/ejbServlet"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EjbServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EJB</span></span><br><span class="line">    SimpleStatelessEjb statelessBean;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        PrintWriter writer = resp.getWriter();</span><br><span class="line">        String msg = statelessBean.hello();</span><br><span class="line">        writer.println(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="app-module-build-gradle"><a href="#app-module-build-gradle" class="headerlink" title="app module: build.gradle"></a>app module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'war'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">ext &#123;</span><br><span class="line">    jerseyVersion = <span class="string">'2.29.1'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    providedCompile project(<span class="string">':ejb'</span>)</span><br><span class="line">    compileOnly <span class="string">'javax:javaee-api:8.0.1'</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">"org.glassfish.jersey.containers:jersey-container-servlet:$&#123;jerseyVersion&#125;"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="app-module-controller-and-rest-configuration"><a href="#app-module-controller-and-rest-configuration" class="headerlink" title="app module: controller and rest configuration"></a>app module: controller and rest configuration</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.app.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cc.jar.bean.session.SimpleStatelessEjb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ejb.EJB;</span><br><span class="line"><span class="keyword">import</span> javax.ejb.Stateless;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.MediaType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Stateless</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EJB</span></span><br><span class="line">    SimpleStatelessEjb statelessBean;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GET</span></span><br><span class="line">    <span class="meta">@Produces</span>(MediaType.APPLICATION_JSON)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> statelessBean.hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.app.configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cc.app.servlet.HelloController;</span><br><span class="line"><span class="keyword">import</span> org.glassfish.jersey.server.ResourceConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.ApplicationPath;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 'services', '/services', or '/services/*'</span></span><br><span class="line"><span class="comment"> * is all the same. Jersey will change it to be '/services/*'</span></span><br><span class="line"><span class="comment"> * &lt;==&gt;</span></span><br><span class="line"><span class="comment"> * &lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"> * &lt;servlet-name&gt;RestApplication&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment"> * &lt;url-pattern&gt;/services/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Here with the <span class="doctag">@ApplicationPath</span>, it's just like if we configured the servlet mapping in the web.xml</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApplicationPath</span>(<span class="string">"services"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestApplication</span> <span class="keyword">extends</span> <span class="title">ResourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RestApplication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        packages("individual.cc.app.servlet");</span></span><br><span class="line">        register(HelloController<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ear-module-build-gradle"><a href="#ear-module-build-gradle" class="headerlink" title="ear module: build.gradle"></a>ear module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'ear'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// The following dependencies will be the ear modules and</span></span><br><span class="line">    <span class="comment">// will be placed in the ear root</span></span><br><span class="line">    deploy project(<span class="string">':ejb'</span>)</span><br><span class="line">    deploy project(<span class="string">path:</span> <span class="string">':web'</span>, <span class="string">configuration:</span> <span class="string">'archives'</span>)</span><br><span class="line">    deploy project(<span class="string">path:</span> <span class="string">':app'</span>, <span class="string">configuration:</span> <span class="string">'archives'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ear &#123;</span><br><span class="line">    appDirName <span class="string">'src/main/app'</span>  <span class="comment">// use application metadata found in this folder</span></span><br><span class="line">    <span class="comment">// put dependent libraries into APP-INF/lib inside the generated EAR</span></span><br><span class="line">    libDirName <span class="string">'APP-INF/lib'</span></span><br><span class="line">    deploymentDescriptor &#123;  <span class="comment">// custom entries for application.xml:</span></span><br><span class="line">        initializeInOrder = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="build-amp-deploy"><a href="#build-amp-deploy" class="headerlink" title="build &amp; deploy"></a>build &amp; deploy</h1><ol>
<li>clean and build ejb module</li>
<li>clean and build app/web module</li>
<li>clean and build ear module</li>
</ol>
<p>Copy <code>ear module/build/libs/ear-1.0-SNAPSHOT.ear</code> to <code>JBOSS HOME/standalone/deployments</code></p>
<p>Run <code>JBOSS HOME/bin/standalone.bat</code> as <code>administrator</code></p>
<p> <a href="http://127.0.0.1:8080/web-1.0-SNAPSHOT/" target="_blank" rel="noopener">http://127.0.0.1:8080/web-1.0-SNAPSHOT/</a> </p>
<p> <a href="http://127.0.0.1:8080/app-1.0-SNAPSHOT/services/hello" target="_blank" rel="noopener">http://127.0.0.1:8080/app-1.0-SNAPSHOT/services/hello</a> </p>
<p> <a href="https://127.0.0.1:8443/web-1.0-SNAPSHOT/" target="_blank" rel="noopener">https://127.0.0.1:8443/web-1.0-SNAPSHOT/</a> </p>
<p> <a href="https://127.0.0.1:8443/app-1.0-SNAPSHOT/services/hello" target="_blank" rel="noopener">https://127.0.0.1:8443/app-1.0-SNAPSHOT/services/hello</a> </p>
<p>All of the above will output <strong>hello world, EJB</strong></p>
<hr>
<hr>
<h1 id="if-maven-replace-5-build-gradle"><a href="#if-maven-replace-5-build-gradle" class="headerlink" title="if maven, replace 5 build.gradle"></a>if maven, replace 5 build.gradle</h1><h2 id="root-pom-xml"><a href="#root-pom-xml" class="headerlink" title="root pom.xml"></a>root pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>web<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>app<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--custom package--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--external package--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaee-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.jersey.containers<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-container-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.29.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">failOnMissingWebXml</span>&gt;</span>false<span class="tag">&lt;/<span class="name">failOnMissingWebXml</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ear-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ejb-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="ejb-module-pom-xml"><a href="#ejb-module-pom-xml" class="headerlink" title="ejb module: pom.xml"></a>ejb module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaee-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ejb-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="web-module-pom-xml"><a href="#web-module-pom-xml" class="headerlink" title="web module: pom.xml"></a>web module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--custom package--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">failOnMissingWebXml</span>&gt;</span>false<span class="tag">&lt;/<span class="name">failOnMissingWebXml</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="app-module-pom-xml"><a href="#app-module-pom-xml" class="headerlink" title="app module: pom.xml"></a>app module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--custom package--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.jersey.containers<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-container-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="ear-module-pom-xml"><a href="#ear-module-pom-xml" class="headerlink" title="ear module: pom.xml"></a>ear module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ear-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;initializeInOrder&gt;true&lt;/initializeInOrder&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">webModule</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--MUST reset the name of a package what is in ear package--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">bundleFileName</span>&gt;</span>web-in-ear.war<span class="tag">&lt;/<span class="name">bundleFileName</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--set custom context root--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">contextRoot</span>&gt;</span>/web<span class="tag">&lt;/<span class="name">contextRoot</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">webModule</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">webModule</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--MUST reset the name of a package what is in ear package--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">bundleFileName</span>&gt;</span>app-in-ear.war<span class="tag">&lt;/<span class="name">bundleFileName</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--set custom context root--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">contextRoot</span>&gt;</span>/app<span class="tag">&lt;/<span class="name">contextRoot</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">webModule</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="build-amp-deploy-1"><a href="#build-amp-deploy-1" class="headerlink" title="build &amp; deploy"></a>build &amp; deploy</h2><p><code>clean and install under root pom.xml</code></p>
<p>Then deploy it to jboss, you can access the following urls:</p>
<p><a href="http://localhost:8080/web/" target="_blank" rel="noopener">http://localhost:8080/web/</a> </p>
<p><a href="http://localhost:8080/app/services/hello" target="_blank" rel="noopener">http://localhost:8080/app/services/hello</a> </p>
<p><a href="https://localhost:8443/web/" target="_blank" rel="noopener">https://localhost:8443/web/</a> </p>
<p><a href="https://localhost:8443/app/services/hello" target="_blank" rel="noopener">https://localhost:8443/app/services/hello</a> </p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>ejb</tag>
        <tag>restful</tag>
        <tag>jboss</tag>
        <tag>gradle</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>deploy springboot to external container(JBoss)</title>
    <url>/deploy-springboot2jboss.html</url>
    <content><![CDATA[<blockquote>
<p>Wildfly: 18.0.1.Final</p>
<p>JDK: 11.0.2</p>
<p>Gradle: 5.6.2</p>
<p>Web: Webflux</p>
</blockquote>
<p><a href="https://github.com/mystic-cg/DeploySpringboot2JBoss" target="_blank" rel="noopener">Source Code</a></p>
<a id="more"></a>

<h2 id="create-springboot-demo-project-by-initializer"><a href="#create-springboot-demo-project-by-initializer" class="headerlink" title="create springboot demo project by initializer"></a>create springboot demo project by initializer</h2><p><img src="assets/1569844794129.png" alt="1569844794129"></p>
<p><img src="assets/1569844973320.png" alt="1569844973320"></p>
<p><img src="assets/1569845032989.png" alt="1569845032989"></p>
<p><img src="assets/1569845140007.png" alt="1569845140007"></p>
<p><img src="assets/1569846771715.png" alt="1569846771715"></p>
<h2 id="write-a-test-case"><a href="#write-a-test-case" class="headerlink" title="write a test case"></a>write a test case</h2><p><img src="assets/1569846460212.png" alt="1569846460212"></p>
<h2 id="build-package"><a href="#build-package" class="headerlink" title="build package"></a>build package</h2><p><img src="assets/1570622045669.png" alt="1570622045669"></p>
<h2 id="deploy-it-to-JBoss"><a href="#deploy-it-to-JBoss" class="headerlink" title="deploy it to JBoss"></a>deploy it to JBoss</h2><p>You can put <code>boot.war</code> to <code>$JBOSS_HOME/standalone/deployments/</code>, then run <code>$JBOSS_HOME/bin/standalone.bat</code> by administrator.</p>
<p><a href="https://localhost:8443/boot/" target="_blank" rel="noopener">https://localhost:8443/boot/</a></p>
<p><a href="http://localhost:8080/boot/" target="_blank" rel="noopener">http://localhost:8080/boot/</a></p>
<p>It will output <code>hello world, springboot</code>.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>jboss</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>expand IPv6 by shell</title>
    <url>/expand-ipv6-by-shell.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">expand_ipv6</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input: ::</span></span><br><span class="line">    <span class="comment"># output: 0:0:0:0:0:0:0:0</span></span><br><span class="line">    <span class="comment"># input: 2001:2d:1f::1</span></span><br><span class="line">    <span class="comment"># output: 2001:2d:1f:0:0:0:0:1</span></span><br><span class="line">    <span class="built_in">local</span> ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> colon_num=$(<span class="built_in">echo</span> <span class="variable">$&#123;ipv6&#125;</span> | awk <span class="string">'&#123;print gsub(/:/, "")&#125;'</span>)</span><br><span class="line">    <span class="built_in">local</span> replace_str=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt;= $(( 7 - <span class="variable">$&#123;colon_num&#125;</span> )); ++ i )); <span class="keyword">do</span></span><br><span class="line">        replace_str=<span class="string">"<span class="variable">$&#123;replace_str&#125;</span>:0"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    replace_str=<span class="string">"<span class="variable">$&#123;replace_str&#125;</span>:"</span></span><br><span class="line">    <span class="built_in">local</span> ipv6_expanded=<span class="variable">$&#123;ipv6/::/$replace_str&#125;</span></span><br><span class="line">    [[ <span class="variable">$&#123;ipv6_expanded&#125;</span> == *: ]] &amp;&amp; ipv6_expanded=<span class="string">"<span class="variable">$&#123;ipv6_expanded&#125;</span>0"</span></span><br><span class="line">    [[ <span class="variable">$&#123;ipv6_expanded&#125;</span> == :* ]] &amp;&amp; ipv6_expanded=<span class="string">"0<span class="variable">$&#123;ipv6_expanded&#125;</span>"</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;ipv6_expanded&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">expand_expanded_ipv6</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input: 0:0:0:0:0:0:0:0</span></span><br><span class="line">    <span class="comment"># output: 0000:0000:0000:0000:0000:0000:0000:0000</span></span><br><span class="line">    <span class="comment"># input: 2001:2d:1f:0:0:0:0:1</span></span><br><span class="line">    <span class="comment"># output: 2001:002d:001f:0000:0000:0000:0000:0001</span></span><br><span class="line">    <span class="built_in">local</span> expanded_ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> hex_arr=(<span class="variable">$&#123;expanded_ipv6//:/ &#125;</span>)</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 8; ++ i )); <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">local</span> len=<span class="variable">$&#123;#hex_arr[i]&#125;</span></span><br><span class="line">        <span class="keyword">for</span> (( j = 4; j &gt; <span class="variable">$&#123;len&#125;</span>; -- j )); <span class="keyword">do</span></span><br><span class="line">            hex_arr[i]=<span class="string">"0<span class="variable">$&#123;hex_arr[i]&#125;</span>"</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;hex_arr[@]&#125;</span> | tr <span class="string">" "</span> :</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">convert_ipv6_to_decimal_basing_8bit</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input(hexadecimal): 0000:0000:0000:0000:0000:0000:0000:0000</span></span><br><span class="line">    <span class="comment"># output(decimal): 00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00</span></span><br><span class="line">    <span class="comment"># input(hexadecimal): 2001:002d:001f:0000:0000:0000:0000:0001</span></span><br><span class="line">    <span class="comment"># output(decimal): 32.1.0.45.0.31.0.0.0.0.0.0.0.0.0.1</span></span><br><span class="line">    <span class="built_in">local</span> completed_ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> hex_arr=(<span class="variable">$&#123;completed_ipv6//:/ &#125;</span>)</span><br><span class="line">    <span class="built_in">local</span> hex_arr_split_by_8bit=()</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 8; ++ i )); <span class="keyword">do</span></span><br><span class="line">        hex_arr_split_by_8bit=( <span class="variable">$&#123;hex_arr_split_by_8bit[@]&#125;</span> <span class="variable">$&#123;hex_arr[i]:0:2&#125;</span> <span class="variable">$&#123;hex_arr[i]:2&#125;</span> )</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">local</span> dec_arr=()</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 16; ++ i )); <span class="keyword">do</span></span><br><span class="line">        dec_arr=( <span class="variable">$&#123;dec_arr[@]&#125;</span> $(<span class="built_in">echo</span> $(( 16<span class="comment">#$&#123;hex_arr_split_by_8bit[i]&#125; ))) )</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;dec_arr[@]&#125;</span> | tr <span class="string">" "</span> .</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">convert_ipv6_to_decimal_basing_16bit</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input(hexadecimal): 0:0:0:0:0:0:0:0</span></span><br><span class="line">    <span class="comment"># output(decimal): 0.0.0.0.0.0.0.0</span></span><br><span class="line">    <span class="comment"># input(hexadecimal): 2001:2d:1f:0:0:0:0:1</span></span><br><span class="line">    <span class="comment"># output(decimal): 8193.45.31.0.0.0.0.1</span></span><br><span class="line">    <span class="built_in">local</span> expanded_ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> hex_arr=(<span class="variable">$&#123;expanded_ipv6//:/ &#125;</span>)</span><br><span class="line">    <span class="built_in">local</span> dec_arr=()</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 8; ++ i )); <span class="keyword">do</span></span><br><span class="line">        dec_arr=( <span class="variable">$&#123;dec_arr[@]&#125;</span> $(<span class="built_in">echo</span> $(( 16<span class="comment">#$&#123;hex_arr[i]&#125; ))) )</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;dec_arr[@]&#125;</span> | tr <span class="string">" "</span> .</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expand_ipv6 <span class="variable">$1</span></span><br><span class="line">expand_expanded_ipv6 $(expand_ipv6 <span class="variable">$1</span>)</span><br><span class="line">convert_ipv6_to_decimal_basing_8bit $(expand_expanded_ipv6 $(expand_ipv6 <span class="variable">$1</span>))</span><br><span class="line">convert_ipv6_to_decimal_basing_16bit $(expand_ipv6 <span class="variable">$1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>IPv6</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>some helpful git cmd &amp; alias</title>
    <url>/git-help.html</url>
    <content><![CDATA[<h1 id="git-alias"><a href="#git-alias" class="headerlink" title="git alias"></a>git alias</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list all alias ==&gt; git alias</span></span><br><span class="line">git config --global alias.alias <span class="string">"! git config --get-regexp ^alias\. | sed -e s/^alias\.// -e s/\ /\ =\ /"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># perfect "git log" ==&gt; git lg</span></span><br><span class="line">git config --global alias.lg <span class="string">"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git log with flow ==&gt; git lf</span></span><br><span class="line">git config --global alias.lf <span class="string">"log --graph --pretty=format:'%C(red)%h%Creset %C(cyan)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --date=short --all"</span></span><br></pre></td></tr></table></figure>

<h1 id="useful-git-command"><a href="#useful-git-command" class="headerlink" title="useful git command"></a>useful git command</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Number of commits by author</span></span><br><span class="line">$ git shortlog -s --author <span class="string">'Author Name'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># List of authors and commits to a repository sorted alphabetically</span></span><br><span class="line">$ git shortlog -s -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># List of commit comments by author</span></span><br><span class="line"><span class="comment"># This also shows the total number of commits by the author</span></span><br><span class="line">$ git shortlog -n --author <span class="string">'Author Name'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># list of add lines, remove lines, total lines by author</span></span><br><span class="line">git <span class="built_in">log</span> --author=mystic --pretty=tformat: --numstat | gawk -v red=<span class="string">'\033[01;31m'</span> -v green=<span class="string">'\033[01;32m'</span> -v blue=<span class="string">'\033[01;34m'</span> <span class="string">'&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf green"Added Lines: +++%s\n"red"Removed Lines: ---%s\n" blue"Total Lines: ===%s\n", add, subs, loc &#125;'</span></span><br></pre></td></tr></table></figure>



<h2 id="git-submodule"><a href="#git-submodule" class="headerlink" title="git submodule"></a>git submodule</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">main_repo_url=<span class="string">""</span></span><br><span class="line"><span class="comment"># clone a repo including all its submodules</span></span><br><span class="line">git <span class="built_in">clone</span> --recurse-submodules <span class="string">"<span class="variable">$&#123;main_repo_url&#125;</span>"</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive <span class="string">"<span class="variable">$&#123;main_repo_url&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If you already have cloned a repository and now want to load it’s submodules you have to use submodule update.</span></span><br><span class="line">git submodule update --init</span><br><span class="line"><span class="comment"># if there are nested submodules:</span></span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"></span><br><span class="line"><span class="comment"># download up to 8 submodules at once</span></span><br><span class="line">git submodule update --init --recursive --<span class="built_in">jobs</span> 8</span><br><span class="line">git <span class="built_in">clone</span> --recursive --<span class="built_in">jobs</span> 8 <span class="string">"<span class="variable">$&#123;main_repo_url&#125;</span>"</span></span><br><span class="line"><span class="comment"># short version</span></span><br><span class="line">git submodule update --init --recursive -j 8</span><br><span class="line"></span><br><span class="line"><span class="comment"># pull all changes in the repo including changes in the submodules</span></span><br><span class="line">git pull --recurse-submodules</span><br><span class="line"></span><br><span class="line"><span class="comment"># update all submodules</span></span><br><span class="line">git submodule update --remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># operate for every submodule</span></span><br><span class="line">git submodule foreach <span class="string">'command'</span></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line">git submodule foreach <span class="string">'git stash'</span></span><br><span class="line">git submodule foreach <span class="string">'git checkout -b new_branch'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create submodule</span></span><br><span class="line">git submodule add <span class="string">"submodule_url"</span></span><br><span class="line"><span class="comment"># init and generate .gitsubmodules</span></span><br><span class="line">git submodule init</span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ get all submodules ************</span></span><br><span class="line">git submodule status</span><br><span class="line">git submodule status --recursive</span><br><span class="line"><span class="comment"># by read .gitmodules</span></span><br><span class="line">git config --file .gitmodules --get-regexp path | awk <span class="string">'&#123; print $2 &#125;'</span></span><br></pre></td></tr></table></figure>

<h1 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h1><p><a href="https://www.jianshu.com/p/0805b5d5d893" target="_blank" rel="noopener">Git Log Usage</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">"%h - %an, %ar : %s"</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">"%h %s"</span> --graph</span><br><span class="line"><span class="comment"># if used the following, please configure alias at first</span></span><br><span class="line">git lg</span><br><span class="line">git lf</span><br></pre></td></tr></table></figure>



<h2 id="git-other"><a href="#git-other" class="headerlink" title="git other"></a>git other</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># count total commits</span></span><br><span class="line">git rev-list --all --count</span><br><span class="line"></span><br><span class="line"><span class="comment"># reset to the previous</span></span><br><span class="line">git reset --hard commit_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># merge multiple commit into one</span></span><br><span class="line"><span class="comment"># HEAD~3 means that only show three `git log` info</span></span><br><span class="line">git rebase -i HEAD~3</span><br><span class="line"></span><br><span class="line"><span class="comment"># set upstream, if branch_name is current branch, it can be ignored</span></span><br><span class="line">git branch --<span class="built_in">set</span>-upstream-to=&lt;upstream&gt; [branch_name]</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">git branch -u &lt;upstream&gt; [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># only rollback the specified file</span></span><br><span class="line">git <span class="built_in">log</span> --oneline a.txt</span><br><span class="line"><span class="comment"># or: </span></span><br><span class="line">git lg a.txt</span><br><span class="line">git reset 575af8dfd a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter author or commmitter</span></span><br><span class="line">git lg --author=mystic</span><br><span class="line">git lg --committer=mystic</span><br></pre></td></tr></table></figure>

<h1 id="some-error-solution"><a href="#some-error-solution" class="headerlink" title="some error solution"></a>some error solution</h1><blockquote>
<p>  git pull<br>  error: cannot lock ref ‘refs/remotes/origin/****’: is at eaabc706c45b474e4e04e6d9de54a5a7bd2d16cb but expected c06606dd5b8c3d3fddc84f8c21f139a04586a1af</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you should run</span></span><br><span class="line"><span class="comment"># Automatically prune local branches that have been removed on the remote server</span></span><br><span class="line">git remote prune origin</span><br><span class="line"><span class="comment"># git gc --prune=now</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>help</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取网易云音乐歌单</title>
    <url>/grab-neteasecloudmusic.html</url>
    <content><![CDATA[<h1 id="Something-needed-before-action"><a href="#Something-needed-before-action" class="headerlink" title="Something needed before action"></a>Something needed before action</h1><pre><code>需要使用到lxml和beautifulsoup,都可以使用pip安装</code></pre><a id="more"></a>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/26 9:39</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    抓取网易云音乐</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url, headers)</span>:</span></span><br><span class="line">    req = urllib.request.Request(url, headers=headers)</span><br><span class="line">    <span class="keyword">with</span> urllib.request.urlopen(req) <span class="keyword">as</span> resp:</span><br><span class="line">        content = resp.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_html</span><span class="params">(html)</span>:</span></span><br><span class="line">    host = <span class="string">'https://music.163.com'</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">    <span class="comment"># 歌单图片[src]</span></span><br><span class="line">    playlist_img = soup.select(<span class="string">'ul#m-pl-container li div img'</span>)</span><br><span class="line">    <span class="comment"># 歌单名称和链接[title|href]</span></span><br><span class="line">    playlist_name = soup.select(<span class="string">'ul#m-pl-container li div a.msk'</span>)</span><br><span class="line">    <span class="comment"># 歌单播放量[text]</span></span><br><span class="line">    playlist_views = soup.select(<span class="string">'ul#m-pl-container li div.bottom span.nb'</span>)</span><br><span class="line">    <span class="comment"># 歌单创建者[title|href]</span></span><br><span class="line">    playlist_creator = soup.select(<span class="string">'ul#m-pl-container li p &gt; span + a'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(playlist_creator)):</span><br><span class="line">        print(<span class="string">'歌单封面: '</span>, playlist_img[i][<span class="string">'src'</span>])</span><br><span class="line">        print(<span class="string">'歌单名称: '</span>, playlist_name[i][<span class="string">'title'</span>])</span><br><span class="line">        print(<span class="string">'歌单链接: '</span>, host + playlist_name[i][<span class="string">'href'</span>])</span><br><span class="line">        print(<span class="string">'歌单播放量: '</span>, playlist_views[i].text)</span><br><span class="line">        print(<span class="string">'歌单创建者: '</span>, playlist_creator[i][<span class="string">'title'</span>])</span><br><span class="line">        print(<span class="string">'创建者主页: '</span>, host + playlist_creator[i][<span class="string">'href'</span>], <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    spider_url = <span class="string">'https://music.163.com/discover/playlist'</span></span><br><span class="line">    result = get_html(spider_url, headers=&#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span>,</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'music.163.com'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    parse_html(result)</span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><pre><code>1.python版本: 3.6.3
2.可以结合前一篇,做个歌词分析</code></pre><p><a href="https://github.com/mystic-cg/data_mining.git" target="_blank" rel="noopener">Github Source Code</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>spider</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取好友说说,进行简单的分析</title>
    <url>/grab-qzone.html</url>
    <content><![CDATA[<h1 id="Something-needed-before-action"><a href="#Something-needed-before-action" class="headerlink" title="Something needed before action"></a>Something needed before action</h1><pre><code>需要下载chromedriver.exe
需要用到selenium,jieba,wordcloud,BeautifulSoup,xlrd,xlwt,xlutils等模块
都可以使用pip install 模块名 方式安装,如果安装失败,可以自己下载whl文件,并将whl文件
放在python的安装目录Scripts下,再通过pip install 本地地址.whl,安装所需模块</code></pre><a id="more"></a>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/12/12 8:33</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    抓取QQ空间说说</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> xlrd <span class="keyword">as</span> xlrd</span><br><span class="line"><span class="keyword">import</span> xlwt <span class="keyword">as</span> xlwt</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> array</span><br><span class="line"><span class="keyword">from</span> scipy.misc <span class="keyword">import</span> imread</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator, STOPWORDS</span><br><span class="line"><span class="keyword">from</span> xlutils.copy <span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_existed</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        os.remove(path)</span><br><span class="line">    w = xlwt.Workbook()</span><br><span class="line">    w.add_sheet(<span class="string">'Sheet1'</span>)</span><br><span class="line">    w.save(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_data</span><span class="params">(data1, data2, path)</span>:</span></span><br><span class="line">    f = xlrd.open_workbook(path)</span><br><span class="line">    sheet = f.sheet_by_name(<span class="string">'Sheet1'</span>)</span><br><span class="line">    src = copy(f)</span><br><span class="line">    row = sheet.nrows</span><br><span class="line">    src.get_sheet(<span class="number">0</span>).write(row, <span class="number">0</span>, data1)</span><br><span class="line">    src.get_sheet(<span class="number">0</span>).write(row, <span class="number">1</span>, data2)</span><br><span class="line">    src.save(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录QQ空间</span></span><br><span class="line"><span class="comment"># noinspection PyBroadException</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_shuoshuo</span><span class="params">(my_qq, my_pwd, friend_qq, path)</span>:</span></span><br><span class="line">    is_existed(path)</span><br><span class="line">    <span class="comment"># 使用selenium</span></span><br><span class="line">    driver = webdriver.Chrome()</span><br><span class="line">    driver.maximize_window()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.set_page_load_timeout(<span class="number">10</span>)</span><br><span class="line">        driver.get(<span class="string">'https://user.qzone.qq.com/&#123;&#125;/311'</span>.format(friend_qq))</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">u'网页启动异常,请重新打开'</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">'login_div'</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">u'非好友无法进入空间,无权限抓取内容'</span>)</span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        driver.switch_to.frame(<span class="string">'login_frame'</span>)</span><br><span class="line">        driver.find_element_by_id(<span class="string">'switcher_plogin'</span>).click()</span><br><span class="line">        driver.find_element_by_id(<span class="string">'u'</span>).clear()</span><br><span class="line">        <span class="comment"># 输入个人QQ</span></span><br><span class="line">        driver.find_element_by_id(<span class="string">'u'</span>).send_keys(my_qq)</span><br><span class="line">        driver.find_element_by_id(<span class="string">'p'</span>).clear()</span><br><span class="line">        <span class="comment"># 输入个人密码</span></span><br><span class="line">        driver.find_element_by_id(<span class="string">'p'</span>).send_keys(my_pwd)</span><br><span class="line">        driver.find_element_by_id(<span class="string">'login_button'</span>).click()</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">    driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">    <span class="comment"># 判断好友是否设置了权限</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">'QM_OwnerInfo_Icon'</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        print(<span class="string">u'空间加载异常,请重新打开'</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        driver.switch_to.frame(<span class="string">'app_canvas_frame'</span>)</span><br><span class="line">        next_page = <span class="string">'page'</span></span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> next_page:</span><br><span class="line">                pages = driver.page_source</span><br><span class="line">                soup = BeautifulSoup(pages, <span class="string">'lxml'</span>)</span><br><span class="line">                shuoshuo_send_times = soup.select(</span><br><span class="line">                    <span class="string">'ol#msgList li.feed div.box.bgr3 &gt; div.ft div.info a.c_tx.c_tx3.goDetail'</span>)</span><br><span class="line">                shuoshuos = soup.select(<span class="string">'ol#msgList li.feed div.bd pre.content'</span>)</span><br><span class="line">                print(<span class="string">u'正在抓取第%d页的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;'</span> % page)</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(shuoshuos)):</span><br><span class="line">                    data = &#123;</span><br><span class="line">                        <span class="string">'time'</span>: shuoshuo_send_times[i][<span class="string">'title'</span>],</span><br><span class="line">                        <span class="string">'shuos'</span>: shuoshuos[i].text</span><br><span class="line">                    &#125;</span><br><span class="line">                    write_data(data[<span class="string">'time'</span>], data[<span class="string">'shuos'</span>], path)</span><br><span class="line">                next_page = driver.find_element_by_link_text(<span class="string">u'下一页'</span>)</span><br><span class="line">                page = page + <span class="number">1</span></span><br><span class="line">                next_page.click()</span><br><span class="line">                time.sleep(<span class="number">3</span>)</span><br><span class="line">                driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">            driver.quit()</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">u'抓取到%d页面结束'</span> % page)</span><br><span class="line">            driver.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shuoshuo_analysis</span><span class="params">(file_path)</span>:</span></span><br><span class="line">    <span class="comment"># 读取csv文件</span></span><br><span class="line">    <span class="comment"># csv模块读取csv文件</span></span><br><span class="line">    <span class="keyword">with</span> open(file_path, <span class="string">'rt'</span>, encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        read_csv = csv.reader(file)</span><br><span class="line">        all_moods = [mood <span class="keyword">for</span> mood <span class="keyword">in</span> read_csv]</span><br><span class="line">        all_moods = array(all_moods)</span><br><span class="line">        shuoshuos = all_moods[:, <span class="number">1</span>]</span><br><span class="line">        phrases = []</span><br><span class="line">        <span class="comment"># 分割(以特殊字符,如逗号,感叹号等,进行分割)+合拼成一维列表(将所有说说文字内容合并)</span></span><br><span class="line">        <span class="keyword">for</span> shuoshuo <span class="keyword">in</span> shuoshuos:</span><br><span class="line">            phrases += re.split(<span class="string">r'[^\u4E00-\u9FA5\w]+'</span>, shuoshuo)</span><br><span class="line">        <span class="comment"># 去除空串</span></span><br><span class="line">        phrases = list(filter(<span class="keyword">lambda</span> phrase: phrase != <span class="string">''</span>, phrases))</span><br><span class="line">        words = []</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> phrases:</span><br><span class="line">            words += jieba.cut(p, HMM=<span class="literal">True</span>)</span><br><span class="line">        print(words)</span><br><span class="line">        print(len(words))</span><br><span class="line">        print(set(words))</span><br><span class="line">        print(len(set(words)))</span><br><span class="line">        <span class="comment"># 去除长度为1的词</span></span><br><span class="line">        <span class="comment"># words = list(filter(lambda word: len(word) &gt; 1, words))</span></span><br><span class="line">        print(Counter(words))</span><br><span class="line">        back_color = imread(<span class="string">'pokemon.jpg'</span>)  <span class="comment"># 解析该图片</span></span><br><span class="line">        wc = WordCloud(background_color=<span class="string">'white'</span>,  <span class="comment"># 背景颜色</span></span><br><span class="line">                       max_words=<span class="number">1000</span>,  <span class="comment"># 最大词数</span></span><br><span class="line">                       mask=back_color,  <span class="comment"># 以该参数值作图绘制词云，这个参数不为空时，width和height会被忽略</span></span><br><span class="line">                       max_font_size=<span class="number">100</span>,  <span class="comment"># 显示字体的最大值</span></span><br><span class="line">                       stopwords=STOPWORDS.add(<span class="string">'苟利国'</span>),  <span class="comment"># 使用内置的屏蔽词，再添加'苟利国'</span></span><br><span class="line">                       font_path=<span class="string">"C:/Windows/Fonts/STFANGSO.ttf"</span>,  <span class="comment"># 解决显示口字型乱码问题，可进入C:/Windows/Fonts/目录更换字体</span></span><br><span class="line">                       random_state=<span class="number">42</span>,  <span class="comment"># 为每个词返回一个PIL颜色</span></span><br><span class="line">                       <span class="comment"># width=1000,  # 图片的宽</span></span><br><span class="line">                       <span class="comment"># height=860  #图片的长</span></span><br><span class="line">                       )</span><br><span class="line">        wc.generate(<span class="string">' '</span>.join(words))</span><br><span class="line">        <span class="comment"># 基于彩色图像生成相应彩色</span></span><br><span class="line">        image_colors = ImageColorGenerator(back_color)</span><br><span class="line">        <span class="comment"># 显示图片</span></span><br><span class="line">        plt.imshow(wc)</span><br><span class="line">        <span class="comment"># 关闭坐标轴</span></span><br><span class="line">        plt.axis(<span class="string">'off'</span>)</span><br><span class="line">        <span class="comment"># 绘制词云</span></span><br><span class="line">        plt.figure()</span><br><span class="line">        plt.imshow(wc.recolor(color_func=image_colors))</span><br><span class="line">        plt.axis(<span class="string">'off'</span>)</span><br><span class="line">        <span class="comment"># 保存图片</span></span><br><span class="line">        wc.to_file(<span class="string">'wordcloud.png'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 爬取QQ空间好友动态,并保存到本地</span></span><br><span class="line">    <span class="comment"># myself = input('Please input your QQ: ')</span></span><br><span class="line">    <span class="comment"># upwd = input('Please input your password: ')</span></span><br><span class="line">    <span class="comment"># friend = input('Please input your friend QQ: ')</span></span><br><span class="line">    <span class="comment"># save_path = 'd:/' + friend + '.csv'</span></span><br><span class="line">    <span class="comment"># get_shuoshuo(myself, upwd, friend, save_path)</span></span><br><span class="line">    <span class="comment"># 进行说说分析,并生成词云</span></span><br><span class="line">    shuoshuo_analysis(<span class="string">'d:/me.csv'</span>)</span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><pre><code>1.python版本: 3.6.3
2.生成的csv文件,在shuoshuo_analysis()中直接调用,会报错,至少我这边是这样的
  解决方案: 
    对打开生成的csv文件,对其另存为普通的csv文件[不是那个utf8格式的csv]
    然后用记事本打开,复制里面的内容;再用sublime打开(应该是乱码的),
    将复制的内容覆盖原有的乱码内容,同时save as utf-8
    shuoshuo_analysis()调用这个文件
  为什么不在最初就保存为utf-8格式的csv文件呢?
    直接保存为csv utf-8格式,打开不会乱码,但是在读取时,第一行数据有问题,其他正常
3.制作词云图片时,选择的背景图片,最好是对比度比较明显的 </code></pre><p><a href="https://github.com/mystic-cg/data_mining.git" target="_blank" rel="noopener">Github Source Code</a>   </p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>spider</tag>
        <tag>data analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>How to configure gradle build on Github Actions</title>
    <url>/gradle-build4github-actions.html</url>
    <content><![CDATA[<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This workflow will build a Java project with Gradle</span></span><br><span class="line"><span class="comment"># For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Java</span> <span class="string">CI</span> <span class="string">with</span> <span class="string">Gradle</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">    <span class="attr">push:</span></span><br><span class="line">        <span class="attr">branches:</span> <span class="string">[</span> <span class="string">master</span> <span class="string">]</span></span><br><span class="line">    <span class="attr">pull_request:</span></span><br><span class="line">        <span class="attr">branches:</span> <span class="string">[</span> <span class="string">master</span> <span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">Gradle</span> <span class="string">Automation</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">        <span class="attr">strategy:</span></span><br><span class="line">            <span class="attr">matrix:</span></span><br><span class="line">                <span class="attr">java:</span> <span class="string">[11,</span> <span class="number">13</span><span class="string">]</span></span><br><span class="line">        <span class="attr">steps:</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/setup-java@v1</span></span><br><span class="line">                <span class="attr">with:</span></span><br><span class="line">                    <span class="attr">java-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.java</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># add cache to improve workflow execution time</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">.gradle/caches</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">                <span class="attr">with:</span></span><br><span class="line">                    <span class="attr">path:</span> <span class="string">~/.gradle/caches</span></span><br><span class="line">                    <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-$&#123;&#123;</span> <span class="string">hashFiles('**/*.gradle*')</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                    <span class="attr">restore-keys:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">.gradle/wrapper</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">                <span class="attr">with:</span></span><br><span class="line">                    <span class="attr">path:</span> <span class="string">~/.gradle/wrapper</span></span><br><span class="line">                    <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-wrapper-$&#123;&#123;</span> <span class="string">hashFiles('**/*.gradle')</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                    <span class="attr">restore-keys:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-wrapper-</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Grant</span> <span class="string">execute</span> <span class="string">permission</span> <span class="string">for</span> <span class="string">gradlew</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">gradlew</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Build</span> <span class="string">with</span> <span class="string">Gradle</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">./gradlew</span> <span class="string">clean</span> <span class="string">build</span> <span class="string">-s</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo with Nginx on CentOS</title>
    <url>/hexo-nginx-on-centos.html</url>
    <content><![CDATA[<h1 id="deploy-hexo-by-nginx-on-centos"><a href="#deploy-hexo-by-nginx-on-centos" class="headerlink" title="deploy hexo by nginx on centos"></a>deploy hexo by nginx on centos</h1><ul>
<li>create some dirs and enter pkgs dir<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /home/packages &amp;&amp; cd /home/packages</span><br></pre></td></tr></table></figure></li>
<li>download npm compiled source code and unzip it<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v11.9.0/node-v11.9.0-linux-x64.tar.xz</span><br><span class="line">tar -xvf node-v11.9.0-linux-x64.tar.xz -C /usr/share/</span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>create soft link<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv /usr/share/node-v11.9.0-linux-x64 /usr/share/nodejs</span><br><span class="line">ln -s /usr/share/nodejs/bin/node /usr/local/bin/</span><br><span class="line">ln -s /usr/share/nodejs/bin/npm /usr/local/bin/</span><br></pre></td></tr></table></figure></li>
<li>install hexo<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">ln -s /usr/share/nodejs/bin/hexo /usr/local/bin/</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="install-nginx"><a href="#install-nginx" class="headerlink" title="install nginx"></a>install nginx</h2><ul>
<li>configure yum repo<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/yum.repos.d/my.repo</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure></li>
<li>install nginx and start it<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y nginx</span><br><span class="line">systemctl start nginx &amp;&amp; systemctl enable nginx</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li>init hexo project<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /home/website &amp;&amp; cd /home/website &amp;&amp; hexo init &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></li>
<li>refer to hexo public dir<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location &#x2F; &#123;                    </span><br><span class="line">    root   &#x2F;home&#x2F;website&#x2F;public;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<hr>
<p>Now, you can access your blog by your IP address.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s install multiple python versions in linux</title>
    <url>/install-multi-version-python.html</url>
    <content><![CDATA[<h1 id="install-multiple-versions-of-python"><a href="#install-multiple-versions-of-python" class="headerlink" title="install multiple versions of python"></a>install multiple versions of python</h1><p><a href="https://www.python.org/ftp/python/" target="_blank" rel="noopener">All Python Released Source</a></p>
<p><strong>The following code has been verified in Centos8.</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">PYTHON_DIR=<span class="string">"/opt/python/"</span></span><br><span class="line">DOWNLOAD_DIR=<span class="string">"/home/download/"</span></span><br><span class="line">PYTHON_2_HOME=<span class="string">"<span class="variable">$&#123;PYTHON_DIR&#125;</span>/py2"</span></span><br><span class="line">PYTHON_3_HOME=<span class="string">"<span class="variable">$&#123;PYTHON_DIR&#125;</span>/py3"</span></span><br><span class="line">PYTHON_2_VERSION=<span class="string">"2.7.17"</span></span><br><span class="line">PYTHON_3_VERSION=<span class="string">"3.8.2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ preparation ************</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>; mkdir -p <span class="variable">$&#123;PYTHON_2_HOME&#125;</span>; mkdir -p <span class="variable">$&#123;PYTHON_3_HOME&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [[ -f <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>.tgz ]]; <span class="keyword">then</span></span><br><span class="line">    wget -P <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span> https://www.python.org/ftp/python/<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>.tgz || <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [[ -f <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>.tgz ]]; <span class="keyword">then</span></span><br><span class="line">    wget -P <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span> https://www.python.org/ftp/python/<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>.tgz || <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">tar -zxvf <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>.tgz -C <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span></span><br><span class="line">tar -zxvf <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>.tgz -C <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ install dependency packages ************</span></span><br><span class="line">yum install -y gcc gcc-c++ automake make autoconf libtool diffutils sudo zlib-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ install python 2 ************</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span> || <span class="built_in">return</span></span><br><span class="line"><span class="comment"># if need, you can uncomment the following code</span></span><br><span class="line"><span class="comment"># make clean</span></span><br><span class="line">./configure --prefix=<span class="variable">$&#123;PYTHON_2_HOME&#125;</span> --<span class="built_in">enable</span>-optimizations</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sleep 10s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ install python 3 ************</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span> || <span class="built_in">return</span></span><br><span class="line"><span class="comment"># if need, you can uncomment the following code</span></span><br><span class="line"><span class="comment"># make clean</span></span><br><span class="line">./configure --prefix=<span class="variable">$&#123;PYTHON_3_HOME&#125;</span> --<span class="built_in">enable</span>-optimizations</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ manage python version ************</span></span><br><span class="line"><span class="comment"># remove old python version management</span></span><br><span class="line">alternatives --display python | grep priority | awk <span class="string">'&#123;print $1&#125;'</span> | xargs -n1 alternatives --remove python &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="comment"># remove old python2 version management</span></span><br><span class="line">alternatives --display python2 | grep priority | awk <span class="string">'&#123;print $1&#125;'</span> | xargs -n1 alternatives --remove python2 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="comment"># remove old python3 version management</span></span><br><span class="line">alternatives --display python3 | grep priority | awk <span class="string">'&#123;print $1&#125;'</span> | xargs -n1 alternatives --remove python3 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># rebuild all python version management</span></span><br><span class="line">alternatives --install /usr/bin/python python <span class="variable">$&#123;PYTHON_2_HOME&#125;</span>/bin/python2 1</span><br><span class="line">alternatives --install /usr/bin/python python <span class="variable">$&#123;PYTHON_3_HOME&#125;</span>/bin/python3 9</span><br><span class="line"></span><br><span class="line">alternatives --install /usr/bin/python2 python2 <span class="variable">$&#123;PYTHON_2_HOME&#125;</span>/bin/python2 9</span><br><span class="line">alternatives --install /usr/bin/python3 python3 <span class="variable">$&#123;PYTHON_3_HOME&#125;</span>/bin/python3 9</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Time complexity in isEmpty() and size()</title>
    <url>/is-empty-size-in-java.html</url>
    <content><![CDATA[<h1 id="Time-complexity-in-isEmpty-and-size"><a href="#Time-complexity-in-isEmpty-and-size" class="headerlink" title="Time complexity in isEmpty() and size()"></a>Time complexity in isEmpty() and size()</h1><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>isEmpty() is always O(1).</p>
<p>size() is mostly O(1), but it can be also O(n).</p>
<h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>Mostly, size() and isEmpty() implementation</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>For the above, both of their time complexity is O(1).</p>
<hr>
<p>For <strong>ConcurrentLinkedQueue</strong> class</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the first live (non-deleted) node on list, or null if none.</span></span><br><span class="line"><span class="comment"> * This is yet another variant of poll/peek; here returning the</span></span><br><span class="line"><span class="comment"> * first node, not element.  We could make peek() a wrapper around</span></span><br><span class="line"><span class="comment"> * first(), but that would cost an extra volatile read of item,</span></span><br><span class="line"><span class="comment"> * and the need to add a retry loop to deal with the possibility</span></span><br><span class="line"><span class="comment"> * of losing a race to a concurrent poll().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Node&lt;E&gt; <span class="title">first</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    restartFromHead: <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; h = head, p = h, q;; p = q) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> hasItem = (p.item != <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (hasItem || (q = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                updateHead(h, p);</span><br><span class="line">                <span class="keyword">return</span> hasItem ? p : <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p == q)</span><br><span class="line">                <span class="keyword">continue</span> restartFromHead;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns &#123;<span class="doctag">@code</span> true&#125; if this queue contains no elements.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this queue contains no elements</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> first() == <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the number of elements in this queue.  If this queue</span></span><br><span class="line"><span class="comment"> * contains more than &#123;<span class="doctag">@code</span> Integer.MAX_VALUE&#125; elements, returns</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Integer.MAX_VALUE&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Beware that, unlike in most collections, this method is</span></span><br><span class="line"><span class="comment"> * &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the</span></span><br><span class="line"><span class="comment"> * asynchronous nature of these queues, determining the current</span></span><br><span class="line"><span class="comment"> * number of elements requires an O(n) traversal.</span></span><br><span class="line"><span class="comment"> * Additionally, if elements are added or removed during execution</span></span><br><span class="line"><span class="comment"> * of this method, the returned result may be inaccurate.  Thus,</span></span><br><span class="line"><span class="comment"> * this method is typically not very useful in concurrent</span></span><br><span class="line"><span class="comment"> * applications.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the number of elements in this queue</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    restartFromHead: <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (ConcurrentLinkedQueue.Node&lt;E&gt; p = first(); p != <span class="keyword">null</span>;) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p.item != <span class="keyword">null</span>)</span><br><span class="line">                <span class="keyword">if</span> (++count == Integer.MAX_VALUE)</span><br><span class="line">                    <span class="keyword">break</span>;  <span class="comment">// @see Collection.size()</span></span><br><span class="line">            <span class="keyword">if</span> (p == (p = p.next))</span><br><span class="line">                <span class="keyword">continue</span> restartFromHead;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>For this, isEmpty() is O(1), size() is O(n).</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>complexity</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference among Iterable, Iterator and Generator</title>
    <url>/iterable-iterator-in-python.html</url>
    <content><![CDATA[<h1 id="Iterable-metaclass-ABCMeta"><a href="#Iterable-metaclass-ABCMeta" class="headerlink" title="Iterable(metaclass=ABCMeta)"></a>Iterable(metaclass=ABCMeta)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">__iter__</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">False</span>:</span><br><span class="line">        <span class="keyword">yield</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__subclasshook__</span><span class="params">(cls, C)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cls <span class="keyword">is</span> Iterable:</span><br><span class="line">        <span class="keyword">return</span> _check_methods(C, <span class="string">"__iter__"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">NotImplemented</span></span><br></pre></td></tr></table></figure>

<h1 id="Iterator-Iterable"><a href="#Iterator-Iterable" class="headerlink" title="Iterator(Iterable)"></a>Iterator(Iterable)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">__next__</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">'Return the next item from the iterator. When exhausted, raise StopIteration'</span></span><br><span class="line">    <span class="keyword">raise</span> StopIteration</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__subclasshook__</span><span class="params">(cls, C)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cls <span class="keyword">is</span> Iterator:</span><br><span class="line">        <span class="keyword">return</span> _check_methods(C, <span class="string">'__iter__'</span>, <span class="string">'__next__'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">NotImplemented</span></span><br></pre></td></tr></table></figure>

<h1 id="Generator-Iterator"><a href="#Generator-Iterator" class="headerlink" title="Generator(Iterator)"></a>Generator(Iterator)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">send()</span></span><br><span class="line"><span class="string">throw()</span></span><br><span class="line"><span class="string">close()</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""Return the next item from the generator.</span></span><br><span class="line"><span class="string">    When exhausted, raise StopIteration.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> self.send(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(self, value)</span>:</span></span><br><span class="line">    <span class="string">"""Send a value into the generator.</span></span><br><span class="line"><span class="string">    Return next yielded value or raise StopIteration.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">raise</span> StopIteration</span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">throw</span><span class="params">(self, typ, val=None, tb=None)</span>:</span></span><br><span class="line">    <span class="string">"""Raise an exception in the generator.</span></span><br><span class="line"><span class="string">    Return next yielded value or raise StopIteration.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> val <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">if</span> tb <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">raise</span> typ</span><br><span class="line">        val = typ()</span><br><span class="line">    <span class="keyword">if</span> tb <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        val = val.with_traceback(tb)</span><br><span class="line">    <span class="keyword">raise</span> val</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""Raise GeneratorExit inside generator.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        self.throw(GeneratorExit)</span><br><span class="line">    <span class="keyword">except</span> (GeneratorExit, StopIteration):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">"generator ignored GeneratorExit"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__subclasshook__</span><span class="params">(cls, C)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cls <span class="keyword">is</span> Generator:</span><br><span class="line">        <span class="keyword">return</span> _check_methods(C, <span class="string">'__iter__'</span>, <span class="string">'__next__'</span>,</span><br><span class="line">                              <span class="string">'send'</span>, <span class="string">'throw'</span>, <span class="string">'close'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">NotImplemented</span></span><br></pre></td></tr></table></figure>

<h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p><strong>Generator</strong> is <strong>Iterator</strong>.</p>
<p><strong>Iterator</strong> is <strong>Iterable</strong>.</p>
<hr>
<p>According to <code>__subclasshook__</code> function,</p>
<p>Iterable, must implement <code>__iter__</code></p>
<p>Iterator, must implement <code>__iter__</code> and <code>__next__</code></p>
<p>Generator, must implement <code>__iter__</code> , <code>__next__</code>, <code>send</code>, <code>throw</code> and <code>close</code></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>source</tag>
      </tags>
  </entry>
  <entry>
    <title>kNN分类算法(python实现)</title>
    <url>/kNN.html</url>
    <content><![CDATA[<h1 id="kNN"><a href="#kNN" class="headerlink" title="kNN"></a>kNN</h1><pre><code>k-NearestNeighbor
核心思想:
    如果一个样本在特征空间中的k个最相邻的样本中的大多数属于某一个类别，
    则该样本也属于这个类别，并具有这个类别上样本的特性
优点:
    精度高、对异常值不敏感、无数据输入假定
缺点：
    计算复杂度高、空间复杂度高
适用数据范围：
    数值型和标称型</code></pre><a id="more"></a>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/13 20:39</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data_set</span><span class="params">()</span>:</span></span><br><span class="line">    group = array([[<span class="number">1.0</span>, <span class="number">1.1</span>], [<span class="number">1.0</span>, <span class="number">1.0</span>], [<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0.1</span>]])</span><br><span class="line">    labels = [<span class="string">'A'</span>, <span class="string">'C'</span>, <span class="string">'B'</span>, <span class="string">'D'</span>]</span><br><span class="line">    <span class="keyword">return</span> group, labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify</span><span class="params">(in_x, data_set, labels, k)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    分类器</span></span><br><span class="line"><span class="string">    :param in_x: 用于分类的输入向量</span></span><br><span class="line"><span class="string">    :param data_set: 输入的训练样本集</span></span><br><span class="line"><span class="string">    :param labels: 标签向量</span></span><br><span class="line"><span class="string">    :param k: 用于选择最近邻居的数目</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 获取data_set的第一维长度</span></span><br><span class="line">    data_set_size = data_set.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 分别计算输入向量与data_set集合中各点的向量差,并存入数组中</span></span><br><span class="line">    diff_arr = tile(in_x, (data_set_size, <span class="number">1</span>)) - data_set</span><br><span class="line">    <span class="comment"># 平方</span></span><br><span class="line">    sq_diff_arr = diff_arr ** <span class="number">2</span></span><br><span class="line">    <span class="comment"># 求平方和</span></span><br><span class="line">    sq_distinces = sq_diff_arr.sum(axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 开根,得各点与输入向量的距离值集合</span></span><br><span class="line">    distinces = sq_distinces ** <span class="number">0.5</span></span><br><span class="line">    <span class="comment"># 排序,升序(返回结果为索引,如[17,23,1,0],排序后返回[3,2,0,1])</span></span><br><span class="line">    sorted_dist_indices = distinces.argsort()</span><br><span class="line">    <span class="comment"># print('最近的点:%s' % labels[sorted_dist_indices[0]])</span></span><br><span class="line">    <span class="comment"># 存储最近的k个点</span></span><br><span class="line">    class_count = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        vote_label = labels[sorted_dist_indices[i]]</span><br><span class="line">        class_count[vote_label] = class_count.get(vote_label, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(class_count)</span></span><br><span class="line">    <span class="comment"># 根据字典class_count的value进行降序排列</span></span><br><span class="line">    <span class="comment"># 在最近点案例中,value都是1,下面的排序等于没做</span></span><br><span class="line">    sorted_class_count = sorted(class_count.items(),</span><br><span class="line">                                key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># print(sorted_class_count)</span></span><br><span class="line">    <span class="keyword">return</span> sorted_class_count[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file2array</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="comment"># 获取文件行数</span></span><br><span class="line">    fr = open(filename)</span><br><span class="line">    array_lines = fr.readlines()</span><br><span class="line">    amount = len(array_lines)</span><br><span class="line">    <span class="comment"># 创建第一维长度为amount,第二维长度为3的零填充数组</span></span><br><span class="line">    <span class="comment"># 因为我们需要存储的数据第二维长度为3,故我们设置固定长度3</span></span><br><span class="line">    return_array = zeros((amount, <span class="number">3</span>))</span><br><span class="line">    <span class="comment"># 创建空list</span></span><br><span class="line">    class_label_vector = []</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> array_lines:</span><br><span class="line">        <span class="comment"># strip([chars]) 去除头尾的字符,默认去除空格字符</span></span><br><span class="line">        line = line.strip()</span><br><span class="line">        list_from_line = line.split(<span class="string">'\t'</span>)</span><br><span class="line">        <span class="comment"># 获取前三个元素,赋值给return_array(这里采用了多维切片)</span></span><br><span class="line">        return_array[index, :] = list_from_line[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">        <span class="comment"># 负索引从后获取,-1获取最后一个元素</span></span><br><span class="line">        class_label_vector.append(int(list_from_line[<span class="number">-1</span>]))</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 返回tuple</span></span><br><span class="line">    <span class="keyword">return</span> return_array, class_label_vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_data_in_chart</span><span class="params">()</span>:</span></span><br><span class="line">    plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]  <span class="comment"># 用来正常显示中文标签</span></span><br><span class="line">    plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span>  <span class="comment"># 用来正常显示负号</span></span><br><span class="line">    dating_data_arr, dating_labels = file2array(<span class="string">'resource/datingTestSet2.txt'</span>)</span><br><span class="line">    <span class="comment"># new figure</span></span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    <span class="comment"># 在1行1列,第一个子图作画;如233,在2行3列共有6个子图的图中,在第3个子图中作画</span></span><br><span class="line">    ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">    <span class="comment"># 设置标题</span></span><br><span class="line">    ax.set_title(<span class="string">'Appointment Data Analysis'</span>)</span><br><span class="line">    <span class="comment"># Helen提供的数据,三列分别是:每年获得的飞行常客里程数,玩视频游戏所耗时间百分比,每周消费的冰淇淋公升数</span></span><br><span class="line">    <span class="comment"># 1:not like    2:general like      3:very like</span></span><br><span class="line">    <span class="comment"># 因为我们最后显示的是第一列和第二列数据,故如下设置备注信息</span></span><br><span class="line">    plt.xlabel(<span class="string">'每年获得的飞行常客里程数'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">'玩视频游戏所耗时间百分比'</span>)</span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 1], dating_data_arr[:, 2])</span></span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 1], dating_data_arr[:, 2], 15.0*array(dating_labels), 15.0*array(dating_labels))</span></span><br><span class="line">    <span class="comment"># 第一列与第二列的数据,显示效果更优</span></span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 0], dating_data_arr[:, 1])</span></span><br><span class="line">    <span class="comment"># 这种方式没有图例,难以区分</span></span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 0], dating_data_arr[:, 1], 15.0 * array(dating_labels), 15.0 * array(dating_labels))</span></span><br><span class="line">    <span class="comment"># 添加图例</span></span><br><span class="line">    length = dating_data_arr.shape[<span class="number">0</span>]</span><br><span class="line">    x1 = []</span><br><span class="line">    y1 = []</span><br><span class="line">    x2 = []</span><br><span class="line">    y2 = []</span><br><span class="line">    x3 = []</span><br><span class="line">    y3 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">if</span> dating_labels[i] == <span class="number">1</span>:</span><br><span class="line">            x1.append(dating_data_arr[i, <span class="number">0</span>])</span><br><span class="line">            y1.append(dating_data_arr[i, <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">elif</span> dating_labels[i] == <span class="number">2</span>:</span><br><span class="line">            x2.append(dating_data_arr[i, <span class="number">0</span>])</span><br><span class="line">            y2.append(dating_data_arr[i, <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x3.append(dating_data_arr[i, <span class="number">0</span>])</span><br><span class="line">            y3.append(dating_data_arr[i, <span class="number">1</span>])</span><br><span class="line">    type1 = ax.scatter(x1, y1, c=<span class="string">'red'</span>)</span><br><span class="line">    type2 = ax.scatter(x2, y2, c=<span class="string">'green'</span>)</span><br><span class="line">    type3 = ax.scatter(x3, y3, c=<span class="string">'blue'</span>)</span><br><span class="line">    ax.legend([type1, type2, type3], [<span class="string">"not like"</span>, <span class="string">"general like"</span>, <span class="string">"very like"</span>], loc=<span class="number">2</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auto_norm</span><span class="params">(data_set)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    归一化特征值:自动将数据集转化为0到1区间内的值</span></span><br><span class="line"><span class="string">    由于里程数远远大于其他特征值,对结果影响过大</span></span><br><span class="line"><span class="string">    而Helen认为三者同等重要,故采用归一化处理</span></span><br><span class="line"><span class="string">    :param data_set:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 取第一维度的最小值</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh = array([</span></span><br><span class="line"><span class="string">                [[1, 1],[8, 18],[100, 3],[2, 4]],</span></span><br><span class="line"><span class="string">                [[1, 90],[21, 2],[11, 3],[19, 4]]</span></span><br><span class="line"><span class="string">            ])</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; shape(sh)</span></span><br><span class="line"><span class="string">        (2,4,2)</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.max()</span></span><br><span class="line"><span class="string">        100</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.min()</span></span><br><span class="line"><span class="string">        1</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.max(0)</span></span><br><span class="line"><span class="string">        array([[  1,  90],</span></span><br><span class="line"><span class="string">               [ 21,  18],</span></span><br><span class="line"><span class="string">               [100,   3],</span></span><br><span class="line"><span class="string">               [ 19,   4]])</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.min(0)</span></span><br><span class="line"><span class="string">        array([[ 1,  1],</span></span><br><span class="line"><span class="string">               [ 8,  2],</span></span><br><span class="line"><span class="string">               [11,  3],</span></span><br><span class="line"><span class="string">               [ 2,  4]])</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    min_vals = data_set.min(<span class="number">0</span>)</span><br><span class="line">    max_vals = data_set.max(<span class="number">0</span>)</span><br><span class="line">    ranges = max_vals - min_vals</span><br><span class="line">    <span class="comment"># 创建一个与data_set各维长度均相同的零填充数组</span></span><br><span class="line">    <span class="comment"># norm_data_set = zeros(shape(data_set))</span></span><br><span class="line">    length = data_set.shape[<span class="number">0</span>]</span><br><span class="line">    norm_data_set = data_set - tile(min_vals, (length, <span class="number">1</span>))</span><br><span class="line">    norm_data_set = norm_data_set / tile(ranges, (length, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> norm_data_set, ranges, min_vals</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dating_class_test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    测试代码</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 用于测试的数据,占总数据的百分比</span></span><br><span class="line">    <span class="comment"># [如:已有100条数据,其中90条作为样本训练数据,剩余10条用于测试算法,检测算法的正确率]</span></span><br><span class="line">    test_ratio = <span class="number">0.10</span></span><br><span class="line">    dating_data_arr, dating_labels = file2array(<span class="string">'resource/datingTestSet2.txt'</span>)</span><br><span class="line">    norm_arr, ranges, min_vals = auto_norm(dating_data_arr)</span><br><span class="line">    length = norm_arr.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 测试数据总数</span></span><br><span class="line">    num_test_data = int(length * test_ratio)</span><br><span class="line">    error_count = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_test_data):</span><br><span class="line">        classifier_result = classify(norm_arr[i, :], norm_arr[num_test_data:length, :],</span><br><span class="line">                                     dating_labels[num_test_data:length], <span class="number">3</span>)</span><br><span class="line">        print(<span class="string">'The classifier came back with: %d, the real answer is: %d'</span></span><br><span class="line">              % (classifier_result, dating_labels[i]))</span><br><span class="line">        <span class="comment"># 如果分类器结果和真实数据,不同;error_count+1</span></span><br><span class="line">        <span class="keyword">if</span> classifier_result != dating_labels[i]:</span><br><span class="line">            error_count += <span class="number">1.0</span></span><br><span class="line">    print(<span class="string">'The total error rate is: %f'</span> % (error_count / num_test_data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify_person</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    预测函数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    result_list = [<span class="string">'not like'</span>, <span class="string">'general like'</span>, <span class="string">'very like'</span>]</span><br><span class="line">    game_percent = float(input(<span class="string">'percentage of time spent playing video games?'</span>))</span><br><span class="line">    fly_miles = float(input(<span class="string">'frequent flier miles earned per year?'</span>))</span><br><span class="line">    how_much_ice_cream = float(input(<span class="string">'liters of ice cream consumed per week?'</span>))</span><br><span class="line">    dating_data_arr, dating_labels = file2array(<span class="string">'resource/datingTestSet2.txt'</span>)</span><br><span class="line">    norm_arr, ranges, min_vals = auto_norm(dating_data_arr)</span><br><span class="line">    in_arr = array([fly_miles, game_percent, how_much_ice_cream])</span><br><span class="line">    classifier_result = classify((in_arr - min_vals) / ranges, norm_arr, dating_labels, <span class="number">3</span>)</span><br><span class="line">    print(<span class="string">'You will probably like this person: %s'</span> % result_list[classifier_result - <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2vector</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    将32*32的二进制图像矩阵转化为1*1024的向量</span></span><br><span class="line"><span class="string">    :param filename:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    return_vector = zeros((<span class="number">1</span>, <span class="number">1024</span>))</span><br><span class="line">    fr = open(filename)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">        line = fr.readline()</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">            return_vector[<span class="number">0</span>, <span class="number">32</span>*i+j] = int(line[j])</span><br><span class="line">    <span class="keyword">return</span> return_vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handwriting_class_test</span><span class="params">()</span>:</span></span><br><span class="line">    handwriting_labels = []</span><br><span class="line">    <span class="comment"># 训练数据</span></span><br><span class="line">    training_file_list = listdir(<span class="string">'resource/digits/trainingDigits'</span>)</span><br><span class="line">    length = len(training_file_list)</span><br><span class="line">    training_arr = zeros((length, <span class="number">1024</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="comment"># 获取文件名,含后缀</span></span><br><span class="line">        filename_str = training_file_list[i]</span><br><span class="line">        file_str = filename_str.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 获取文件中存储二进制图像,表示的数字</span></span><br><span class="line">        class_num_str = int(file_str.split(<span class="string">'_'</span>)[<span class="number">0</span>])</span><br><span class="line">        handwriting_labels.append(class_num_str)</span><br><span class="line">        <span class="comment"># 将各文件生成的1*1024向量分别存入training_arr</span></span><br><span class="line">        training_arr[i, :] = img2vector(<span class="string">'resource/digits/trainingDigits/%s'</span> % filename_str)</span><br><span class="line">    <span class="comment"># 测试数据</span></span><br><span class="line">    test_file_list = listdir(<span class="string">'resource/digits/testDigits'</span>)</span><br><span class="line">    error_count = <span class="number">0.0</span></span><br><span class="line">    length = len(test_file_list)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        filename_str = test_file_list[i]</span><br><span class="line">        file_str = filename_str.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        class_num_str = int(file_str.split(<span class="string">'_'</span>)[<span class="number">0</span>])</span><br><span class="line">        <span class="comment"># 读取一个测试文件,并生成1*1024的向量,赋值给vector_under_test</span></span><br><span class="line">        vector_under_test = img2vector(<span class="string">'resource/digits/testDigits/%s'</span> % filename_str)</span><br><span class="line">        classifier_result = classify(vector_under_test, training_arr, handwriting_labels, <span class="number">3</span>)</span><br><span class="line">        print(<span class="string">'The classifier came back with: %d,the real answer is: %d'</span></span><br><span class="line">              % (classifier_result, class_num_str))</span><br><span class="line">        <span class="keyword">if</span> classifier_result != class_num_str:</span><br><span class="line">            error_count += <span class="number">1.0</span></span><br><span class="line">    print(<span class="string">'The total number of errors is: %d'</span> % error_count)</span><br><span class="line">    print(<span class="string">'The total error rate is: %f'</span> % (error_count/length))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># show_data_in_chart()</span></span><br><span class="line">    <span class="comment"># 通过调整test_ratio的比例,以及k的值,使结果最优</span></span><br><span class="line">    <span class="comment"># dating_class_test()</span></span><br><span class="line">    <span class="comment"># classify_person()</span></span><br><span class="line">    <span class="comment"># test_vector = img2vector('resource/digits/testDigits/0_0.txt')</span></span><br><span class="line">    <span class="comment"># print(test_vector[0, 0:32])</span></span><br><span class="line">    handwriting_class_test()</span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><p><a href="https://github.com/mystic-cg/MachineLearning.git" target="_blank" rel="noopener">Github Source Code</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>config in cloud image</title>
    <url>/linux-cloud-image.html</url>
    <content><![CDATA[<h1 id="change-cloud-image-default-config"><a href="#change-cloud-image-default-config" class="headerlink" title="change cloud image default config"></a>change cloud image default config</h1><h2 id="install-package"><a href="#install-package" class="headerlink" title="install package"></a>install package</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y libguestfs-tools</span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">sudo yum install -y libguestfs-tools-c</span><br></pre></td></tr></table></figure>



<h2 id="Set-root-password"><a href="#Set-root-password" class="headerlink" title="Set root password"></a>Set root password</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --root-password password:StrongRootPassword</span><br></pre></td></tr></table></figure>

<h2 id="Register-System"><a href="#Register-System" class="headerlink" title="Register System"></a>Register System</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a overcloud-full.qcow2 --run-command <span class="string">'subscription-manager register --username=[username] --password=[password]'</span></span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --run-command <span class="string">'subscription-manager attach --pool [subscription-pool]'</span></span><br></pre></td></tr></table></figure>

<h2 id="Install-Software-packages-inside-an-image"><a href="#Install-Software-packages-inside-an-image" class="headerlink" title="Install Software packages inside an image"></a>Install Software packages inside an image</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --install [vim,bash-completion,wget,curl,telnet,unzip]</span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --install net-tools</span><br></pre></td></tr></table></figure>

<h2 id="Upload-SSH-public-key"><a href="#Upload-SSH-public-key" class="headerlink" title="Upload SSH public key"></a>Upload SSH public key</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set ssh-key for a user(The user must exist in image)</span></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2  --ssh-inject root:file:./id_rsa.pub</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --run-command <span class="string">'useradd mystic'</span> \</span><br><span class="line">	--ssh-inject mystic:file:~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<h2 id="Uploading-files"><a href="#Uploading-files" class="headerlink" title="Uploading files"></a>Uploading files</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --upload rhsm.conf:/etc/rhsm/rhsm.conf</span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --upload yum.conf:/etc/yum.conf</span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --upload proxy.sh:/etc/profile.d/</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  The format: <code>local_file_path:image_file_path</code></p>
</blockquote>
<h2 id="Set-Timezone"><a href="#Set-Timezone" class="headerlink" title="Set Timezone"></a>Set Timezone</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --timezone <span class="string">"Asia/Shanghai"</span></span><br></pre></td></tr></table></figure>

<h2 id="Relabel-SELinux"><a href="#Relabel-SELinux" class="headerlink" title="Relabel SELinux"></a>Relabel SELinux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --selinux-relabel</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>image</tag>
      </tags>
  </entry>
  <entry>
    <title>proxy in linux</title>
    <url>/linux-proxy.html</url>
    <content><![CDATA[<h1 id="proxy-for-linux-centos-rhel"><a href="#proxy-for-linux-centos-rhel" class="headerlink" title="proxy for linux(centos/rhel)"></a>proxy for linux(centos/rhel)</h1><p>Define the environment variables in /etc/environment file if you want to add a permanent proxy in the CentOS/RHEL 7.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"all_proxy=http://proxy.example.com:3128/"</span> &gt; /etc/environment</span><br></pre></td></tr></table></figure>



<p>For <strong>bash</strong> and <strong>sh</strong> users, add the export line given above into a new file called <strong>/etc/profile.d/http_proxy.sh</strong> file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export all_proxy=http://proxy.example.com:3128/"</span> &gt; /etc/profile.d/http_proxy.sh</span><br></pre></td></tr></table></figure>

<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a><code>PS</code></h2><table>
<thead>
<tr>
<th>Env Variable</th>
<th>Desc</th>
<th>e.g.</th>
</tr>
</thead>
<tbody><tr>
<td>http_proxy</td>
<td></td>
<td>10.0.0.51:8080<br/><a href="http://10.0.0.51:8080" target="_blank" rel="noopener">http://10.0.0.51:8080</a><br/>user:<a href="mailto:pass@10.0.0.10">pass@10.0.0.10</a>:8080<br/>socks4://10.0.0.51:1080<br/>socks5://192.168.1.1:1080</td>
</tr>
<tr>
<td>https_proxy</td>
<td></td>
<td>ditto</td>
</tr>
<tr>
<td>ftp_proxy</td>
<td></td>
<td>ditto</td>
</tr>
<tr>
<td>all_proxy</td>
<td>if this variable is set, there is no need to set the above variables</td>
<td>ditto</td>
</tr>
<tr>
<td>no_proxy</td>
<td></td>
<td><em>.aiezu.com,10.</em>.<em>.</em>,192.168.<em>.</em>,*.local,localhost,127.0.0.1</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>set route on linux</title>
    <url>/linux-route.html</url>
    <content><![CDATA[<h1 id="linux-route"><a href="#linux-route" class="headerlink" title="linux route"></a>linux route</h1><h2 id="add-static-route"><a href="#add-static-route" class="headerlink" title="add static route"></a>add static route</h2><ul>
<li>add default static route</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Permanent</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"any net 0.0.0.0/0 gw 110.188.40.1"</span> &gt;&gt; /etc/sysconfig/static-routes</span><br><span class="line"><span class="comment"># Temporary</span></span><br><span class="line">ip route add default dev vlan7</span><br><span class="line">ip route add default via 110.188.40.1</span><br><span class="line">ip route add default via 110.188.40.1 dev vlan7</span><br><span class="line">ip route add 0.0.0.0/0 dev vlan7</span><br><span class="line">ip route add 0.0.0.0/0 via 110.188.40.1</span><br><span class="line">ip route add 0.0.0.0/0 via 110.188.40.1 dev vlan7</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<ul>
<li>add specific net static route</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"any net 110.188.40.0/24 gw 110.188.40.1"</span> &gt;&gt; /etc/sysconfig/static-routes</span><br></pre></td></tr></table></figure>

<h2 id="delete-route"><a href="#delete-route" class="headerlink" title="delete route"></a>delete route</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># delete default route</span></span><br><span class="line">route del default gw 110.188.40.1</span><br><span class="line">ip route del default via 110.188.18.1 dev vlan16</span><br><span class="line"><span class="comment"># delete a non-default route</span></span><br><span class="line">ip route del 110.188.18.0/24 via 110.188.18.1 dev vlan16</span><br></pre></td></tr></table></figure>

<h2 id="replace-route"><a href="#replace-route" class="headerlink" title="replace route"></a>replace route</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># work well after every network restart</span></span><br><span class="line"><span class="comment"># replace if exists, or add</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ip route replace default via 110.188.40.1 dev vlan7"</span> &gt;&gt; /sbin/ifup-local</span><br><span class="line">chmod +x /sbin/ifup-local</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>

<h2 id="change-route"><a href="#change-route" class="headerlink" title="change route"></a>change route</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># change some params of existing route</span></span><br><span class="line">ip route change 192.192.13.1/24 dev ens32</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>tcpdump</title>
    <url>/linux-tcpdump.html</url>
    <content><![CDATA[<h1 id="some-common-tcpdump-cli"><a href="#some-common-tcpdump-cli" class="headerlink" title="some common tcpdump cli"></a>some common tcpdump cli</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading / Writing Captures to a File </span></span><br><span class="line">tcpdump port 80 -w capture_file </span><br><span class="line"></span><br><span class="line"><span class="comment"># read PCAP files by using the -r switch </span></span><br><span class="line">tcpdump -r capture_file </span><br><span class="line"></span><br><span class="line"><span class="comment"># port 2000 of any nic  </span></span><br><span class="line">tcpdump -i any port 2000 –nn </span><br><span class="line"></span><br><span class="line"><span class="comment"># Everything on an interface </span></span><br><span class="line">tcpdump -i eth0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Find Traffic by IP </span></span><br><span class="line"><span class="comment"># One of the most common queries, using host, you can see traffic that’s going to or from 1.1.1.1. </span></span><br><span class="line">tcpdump host 1.1.1.1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Filtering by Source and/or Destination </span></span><br><span class="line">tcpdump src 1.1.1.1  </span><br><span class="line">tcpdump dst 1.0.0.1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Finding Packets by Network </span></span><br><span class="line">tcpdump net 1.2.3.0/24 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Get Packet Contents with Hex Output </span></span><br><span class="line">tcpdump -c 1 -X icmp </span><br><span class="line"></span><br><span class="line"><span class="comment"># Show Traffic Related to a Specific Port </span></span><br><span class="line">tcpdump port 3389  </span><br><span class="line">tcpdump src port 1025 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Show Traffic of One Protocol </span></span><br><span class="line">tcpdump icmp </span><br><span class="line"></span><br><span class="line"><span class="comment"># Show only IP6 Traffic </span></span><br><span class="line">tcpdump ip6 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Find Traffic Using Port Ranges </span></span><br><span class="line">tcpdump portrange 21-23 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Find Traffic Based on Packet Size </span></span><br><span class="line">tcpdump less 32  </span><br><span class="line">tcpdump greater 64  </span><br><span class="line">tcpdump &lt;= 128 </span><br><span class="line"></span><br><span class="line"><span class="comment"># ==================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># It’s All About the Combinations </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= AND =========</span></span><br><span class="line"><span class="comment"># and or &amp;&amp; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= OR ========= </span></span><br><span class="line"><span class="comment"># or or || </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= EXCEPT =========</span></span><br><span class="line"><span class="comment"># not or ! </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># From specific IP and destined for a specific Port </span></span><br><span class="line"><span class="comment"># Let’s find all traffic from 10.5.2.3 going to any host on port 3389. </span></span><br><span class="line">tcpdump -nnvvS src 10.5.2.3 and dst port 3389 </span><br><span class="line"></span><br><span class="line"><span class="comment"># From One Network to Another </span></span><br><span class="line"><span class="comment"># Let’s look for all traffic coming from 192.168.x.x and going to the 10.x or 172.16.x.x networks</span></span><br><span class="line"><span class="comment"># and we’re showing hex output with no hostname resolution and one level of extra verbosity. </span></span><br><span class="line">tcpdump -nvX src net 192.168.0.0/16 and dst net 10.0.0.0/8 or 172.16.0.0/16 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Non ICMP Traffic Going to a Specific IP </span></span><br><span class="line"><span class="comment"># This will show us all traffic going to 192.168.0.2 that is not ICMP. </span></span><br><span class="line">tcpdump dst 192.168.0.2 &amp;&amp; src ! icmp </span><br><span class="line">tcpdump dst 192.168.0.2 and src not icmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># catch packages from(to) eth0 or eth1</span></span><br><span class="line">tcpdump -vi eth0 || eth1 -w tmp.pcap</span><br></pre></td></tr></table></figure>

<h1 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h1><h2 id="match-MAC-address-amp-VLAN"><a href="#match-MAC-address-amp-VLAN" class="headerlink" title="match MAC address &amp; VLAN"></a>match MAC address &amp; VLAN</h2><ul>
<li>ether host <MAC> - capture packets sent from and to <MAC></li>
<li>ether src <MAC> - capture packets sent from <MAC></li>
<li>ether dst <MAC> - capture packets sent to <MAC></li>
<li>vlan <VLAN ID> - match <VLAN ID></li>
</ul>
<h2 id="match-protocol"><a href="#match-protocol" class="headerlink" title="match protocol"></a>match protocol</h2><p>Match protocols in L3 header:</p>
<ul>
<li><code>ip proto</code> - PROTO: icmp, icmp6, igmp, igrp, pim, ah, esp, vrrp, udp, or tcp</li>
</ul>
<p>Follow are abbreviations:</p>
<ul>
<li><code>icmp</code> = <code>proto icmp</code></li>
<li><code>tcp</code> = <code>proto tcp</code></li>
<li><code>udp</code> = <code>proto udp</code></li>
</ul>
<p>Match protocols in L2 header:</p>
<ul>
<li><code>ether proto</code> - PROTO: ip, ip6, arp, rarp, atalk, aarp, decnet, sca, lat, mopdl, moprc, iso, stp, ipx, or netbeui</li>
</ul>
<p>Follow are abbreviations:</p>
<ul>
<li><code>ip</code> = <code>ether proto ip</code></li>
<li><code>ip6</code> = <code>ether proto ip6</code></li>
<li><code>arp</code> = <code>ether proto arp</code></li>
<li><code>rarp</code> = <code>ether proto rarp</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tcpdump -i eth0 arp</span><br><span class="line">tcpdump -i eth0 icmp</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s understand what&#39;s lldp.</title>
    <url>/net-lldp.html</url>
    <content><![CDATA[<h1 id="LLDP"><a href="#LLDP" class="headerlink" title="LLDP"></a>LLDP</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>目前，网络设备的种类日益繁多且各自的配置错综复杂，为了使不同厂商的设备能够在网络中相互发现并交互各自的系统及配置信息，需要有一个标准的信息交流平台。</p>
<p>LLDP（Link Layer Discovery Protocol，<strong>链路层发现协议</strong>）就是在这样的背景下产生的，它提供了一种标准的链路层发现方式，可以将本端设备的<strong>主要能力</strong>、<strong>管理地址</strong>、<strong>设备标识</strong>、<strong>接口标识</strong>等信息组织成不同的<code>TLV</code>（Type/Length/Value，类型/长度/值），并封装在LLDPDU（LLDP Data Unit，<strong>链路层发现协议数据单元</strong>）中发布给与自己直连的邻居，邻居收到这些信息后将其以标准MIB（Management Information Base，<strong>管理信息库</strong>）的形式保存起来，以供网络管理系统查询及判断链路的通信状况。</p>
<p>类似的还有Cisco Discovery Protocol, Foundry Discovery Protocol, Nortel Discovery Protocol, etc.</p>
<h2 id="Frame-Structure"><a href="#Frame-Structure" class="headerlink" title="Frame Structure"></a>Frame Structure</h2><p>LLDP的以太帧通常有DST MAC, SRC MAC, EtherType(0x88cc). 以及LLDPDU和FCS组成.</p>
<p><strong>Ethernet Frame structure</strong>:</p>
<table>
<thead>
<tr>
<th align="center"><a href="https://en.wikipedia.org/wiki/Preamble_(communication)" target="_blank" rel="noopener">Preamble</a></th>
<th align="center">Destination MAC</th>
<th align="center">Source MAC</th>
<th align="center"><a href="https://en.wikipedia.org/wiki/Ethertype" target="_blank" rel="noopener">Ethertype</a></th>
<th>LLDPDU</th>
<th align="center"><a href="https://en.wikipedia.org/wiki/Frame_check_sequence" target="_blank" rel="noopener">Frame check sequence</a></th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="center">01:80:c2:00:00:0e, or 01:80:c2:00:00:03, or 01:80:c2:00:00:00</td>
<td align="center">Station’s address</td>
<td align="center">0x88CC</td>
<td></td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>LLDPDU</strong>:</p>
<table>
<thead>
<tr>
<th>Chassis ID TLV</th>
<th>Port ID TLV</th>
<th>Time to live TLV</th>
<th>Optional TLV(s)</th>
<th>End of  LLDPDU TLV</th>
</tr>
</thead>
<tbody><tr>
<td>Type=1</td>
<td>Type=2</td>
<td>Type=3</td>
<td>Optional TLV</td>
<td>…</td>
</tr>
</tbody></table>
<p><strong>TLV structures</strong>:</p>
<table>
<thead>
<tr>
<th align="center">Type</th>
<th align="center">Length</th>
<th align="center">Value</th>
</tr>
</thead>
<tbody><tr>
<td align="center">7 bits</td>
<td align="center">9 bits</td>
<td align="center">0-511 octets</td>
</tr>
</tbody></table>
<p><strong>TLV type values</strong>:</p>
<table>
<thead>
<tr>
<th align="center">TLV type</th>
<th align="center">TLV name</th>
<th align="center">Usage in LLDPDU</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">End of LLDPDU</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">Chassis ID</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">Port ID</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">Time To Live</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">Port description</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">System name</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">System description</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">System capabilities</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">Management address</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">9–126</td>
<td align="center">Reserved</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center">127</td>
<td align="center">Custom TLVs</td>
<td align="center">Optional</td>
</tr>
</tbody></table>
<p>Custom TLVs are supported via a TLV type 127. The value of a custom TLV starts with a 24-bit organizationally unique identifier and a 1 byte organizationally specific subtype followed by data. The basic format for an organizationally specific TLV is shown below:</p>
<table>
<thead>
<tr>
<th align="center">Type</th>
<th align="center">Length</th>
<th align="center">Organizationally unique identifier (OUI)</th>
<th align="center">Organizationally defined subtype</th>
<th align="center">Organizationally defined information string</th>
</tr>
</thead>
<tbody><tr>
<td align="center">7 bits—127</td>
<td align="center">9 bits</td>
<td align="center">24 bits</td>
<td align="center">8 bits</td>
<td align="center">0-507 octets</td>
</tr>
</tbody></table>
<p>According to IEEE Std 802.1AB, §9.6.1.3, “The Organizationally Unique Identifier shall contain the organization’s OUI as defined in IEEE Std 802-2001.” Each organization is responsible for managing their subtypes.</p>
<h2 id="Work-Mechanism"><a href="#Work-Mechanism" class="headerlink" title="Work Mechanism"></a>Work Mechanism</h2><h3 id="LLDP工作模式"><a href="#LLDP工作模式" class="headerlink" title="LLDP工作模式"></a>LLDP工作模式</h3><ul>
<li>TxRx: 既发送也接收LLDP报文</li>
<li>Tx: 只发送LLDP报文</li>
<li>Rx: 只接收LLDP报文</li>
<li>Disable: 既不发送也不接收LLDP报文</li>
</ul>
<p>当端口的LLDP工作模式发生变化时，端口将对协议状态机进行初始化操作。为了避免端口工作模式频繁改变而导致端口不断执行初始化操作，可配置端口初始化延迟时间，当端口工作模式改变时延迟一段时间再执行初始化操作。</p>
<h3 id="LLDP发送机制"><a href="#LLDP发送机制" class="headerlink" title="LLDP发送机制"></a>LLDP发送机制</h3><blockquote>
<p>  当端口工作在TxRx或Tx模式时，设备会周期性地向邻居设备发送LLDP报文。如果设备的本地配置发生变化则立即发送LLDP报文，以将本地信息的变化情况尽快通知给邻居设备。但为了防止本地信息的频繁变化而引起LLDP报文的大量发送，每发送一个LLDP报文后都需延迟一段时间后再继续发送下一个报文。</p>
<p>  当设备的工作模式由Disable/Rx切换为TxRx/Tx，或者发现了新的邻居设备（即收到一个新的LLDP报文且本地尚未保存发送该报文设备的信息）时，该设备将自动启用快速发送机制，即将LLDP报文的发送周期缩短为1秒，并连续发送指定数量的LLDP报文后再恢复为正常的发送周期。</p>
</blockquote>
<h3 id="LLDP接收机制"><a href="#LLDP接收机制" class="headerlink" title="LLDP接收机制"></a>LLDP接收机制</h3><blockquote>
<p>  当端口工作在TxRx或Rx模式时，设备会对收到的LLDP报文及其携带的TLV进行有效性检查，通过检查后再将邻居信息保存到本地，并根据TTL（Time To Live，生存时间） TLV中TTL的值来设置邻居信息在本地设备上的老化时间，若该值为零，则立刻老化该邻居信息。</p>
</blockquote>
<p><a href="http://www.h3c.com/cn/d_200805/605853_30003_0.htm" target="_blank" rel="noopener">H3C LLDP Information</a></p>
<p><a href="https://en.wikipedia.org/wiki/Link_Layer_Discovery_Protocol" target="_blank" rel="noopener">LLDP wiki</a></p>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>protocol</tag>
      </tags>
  </entry>
  <entry>
    <title>trunk in switch</title>
    <url>/net-switch-trunk.html</url>
    <content><![CDATA[<h1 id="Trunk"><a href="#Trunk" class="headerlink" title="Trunk"></a>Trunk</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><blockquote>
<p>  <a href="https://wenku.baidu.com/view/6694697d657d27284b73f242336c1eb91a373323.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/6694697d657d27284b73f242336c1eb91a373323.html</a></p>
</blockquote>
<h2 id="vlan-between-switches"><a href="#vlan-between-switches" class="headerlink" title="vlan between switches"></a>vlan between switches</h2><p><img src="assets/trunk.png" alt="trunk"></p>
<p>PC1 sends traffic to PC2 after processing its host routing table. These nodes are in the same VLAN but they are connected to different switches. The basic process:</p>
<ol>
<li>The Ethernet frame leaves PC1 and is received by Switch 1.</li>
<li>The Switch 1 SAT indicates that the destination is on the other end of the trunk line.</li>
<li>Switch 1 uses the trunking protocol to modify the Ethernet frame by adding the VLAN id.</li>
<li>The new frame leaves the trunk port on Switch1 and is received by Switch 2.</li>
<li>Switch2 reads the VLAN id and strips off the trunking protocol.</li>
<li>The original frame is forwarded to the destination (port 4) based on the SAT of Switch 2.</li>
</ol>
<h2 id="Openstack-Trunk"><a href="#Openstack-Trunk" class="headerlink" title="Openstack Trunk"></a>Openstack Trunk</h2><p><img src="assets/20200424170120849.png" alt="openstack trunk port"></p>
<p><a href="https://object-storage-ca-ymq-1.vexxhost.net/swift/v1/6e4619c416ff4bd19e1c087f27a43eea/www-assets-prod/presentation-media/Neutron-Trunks.pdf" target="_blank" rel="noopener">Reference from here1</a></p>
<p><a href="https://www.oreilly.com/library/view/packet-guide-to/9781449311315/ch04.html" target="_blank" rel="noopener">Reference from here2</a></p>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>device</tag>
      </tags>
  </entry>
  <entry>
    <title>Switch</title>
    <url>/net-switch.html</url>
    <content><![CDATA[<h1 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h3 id="Link-Type"><a href="#Link-Type" class="headerlink" title="Link Type"></a>Link Type</h3><blockquote>
<p>  The link type of VLAN can be divided into <strong>access link</strong> and <strong>trunk link</strong>.</p>
</blockquote>
<h4 id="Access-Link"><a href="#Access-Link" class="headerlink" title="Access Link"></a>Access Link</h4><ul>
<li>Access link is part of only one VLAN, and normally is for end devices.</li>
<li>Any device attached to an access link is unaware of a VLAN membership.</li>
<li>An access-link connection can understand only standard Ethernet frames.</li>
<li>Switches remove any VLAN information from the frame before it is sent to an access-link device.</li>
</ul>
<h4 id="Trunk-Link"><a href="#Trunk-Link" class="headerlink" title="Trunk Link"></a>Trunk Link</h4><ul>
<li>Trunk link can carry multiple VLAN traffic and normally is used to connect switches to other switches or to routers.</li>
</ul>
<h2 id="Access-Port"><a href="#Access-Port" class="headerlink" title="Access Port"></a>Access Port</h2><p>l Belong to <strong>one</strong> VLAN.</p>
<p>l Commonly used to connect computer ports.</p>
<hr>
<ul>
<li>Strip the VLAN information in the packet and forward the packet directly.</li>
</ul>
<h2 id="Trunk-Port"><a href="#Trunk-Port" class="headerlink" title="Trunk Port"></a>Trunk Port</h2><p>l Allow <strong>multiple</strong> VLANs through.</p>
<p>l Receive and send <strong>multiple</strong> VLAN packets.</p>
<p>l Typically used for connection between switches.</p>
<hr>
<ol>
<li><p>Compare the PVID of the port and the VLAN information in the packet to be transmitted.</p>
</li>
<li><p>If they are the same, proceed to Step 3, otherwise, proceed to Step 4</p>
</li>
<li><p>Strip the VLAN information in the packet and forward  the packet.</p>
</li>
<li><p>Forward the packet directly.</p>
</li>
</ol>
<h2 id="Hybrid-Port"><a href="#Hybrid-Port" class="headerlink" title="Hybrid Port"></a>Hybrid Port</h2><p>l Allow <strong>multiple</strong> VLANs through.</p>
<p>l Receive and send <strong>multiple</strong> VLAN packets.</p>
<p>l Used for connection between switches, or switch and computer.</p>
<hr>
<ol>
<li><p>Check the VLAN attributes on this port by running the command disp interface to se whether the VLAN attributes is “tagged” or “untagged”</p>
</li>
<li><p>If I is untagged, proceed to Step 3, if it is tagged, proceed to step 4.</p>
</li>
<li><p>Strip the VLAN information in the packet and forward the packet.</p>
</li>
<li><p>Forward the packet directly.</p>
</li>
</ol>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><table>
<thead>
<tr>
<th>Port Type</th>
<th align="left">Support Mode</th>
<th>Common use cases</th>
<th>Comment</th>
</tr>
</thead>
<tbody><tr>
<td>Access</td>
<td align="left">single untagged VLAN</td>
<td>PC/Printer to switch</td>
<td></td>
</tr>
<tr>
<td>Trunk</td>
<td align="left">single untagged VLAN &amp; multiple tagged VLANs</td>
<td>switch/hypervisor to switch</td>
<td>VLAN 1 can be Tagged (Untagged by default)</td>
</tr>
<tr>
<td>Hybrid</td>
<td align="left">Support Untagged VLANs &amp; Tagged VLANs</td>
<td>1. Physical Connection: IP Phone to Network Switch Port &amp; a PC to IP Phone’s Switch port; 2. Logical Connection: Voice VLAN as Tagged &amp; Data VLAN as Untagged &amp; Switch port in Trunk mode</td>
<td>1. Usually the Untagged VLAN number = Native/Default VLAN number; 2. Support for multi-Untagged Frames, usually require the use of protocol-based VLANs; 3. VLAN 1 can be Tagged (Untagged by default)</td>
</tr>
</tbody></table>
<p><img src="assets/switch-egg.jpg" alt="switch-egg"></p>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>device</tag>
      </tags>
  </entry>
  <entry>
    <title>VLAN</title>
    <url>/net-vlan.html</url>
    <content><![CDATA[<h1 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h1><blockquote>
<p>  <a href="https://www.utepo.net/article/detail/255.html" target="_blank" rel="noopener">Get to Know Basic Knwoledge of VLAN(Part 1)</a></p>
<p>  <a href="https://www.utepo.net/article/detail/295.html" target="_blank" rel="noopener">Get to Know Basic Knwoledge of VLAN(Part 2)</a></p>
</blockquote>
<h2 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h2><ol>
<li><p>reduce broadcast storm</p>
<blockquote>
<p>  The key advantage of VLAN is that it can isolate the conflict domain as well as broadcast domain. If there are hundreds of hosts in a LAN, the network would be completely paralyzed when a broadcast storm happened. Meanwhile, users can divide the broadcast domain through VLAN, limiting the broadcast to each VLAN, and can not be transferred to cross VLAN. Most important, as consideration to improved security, the broadcasts of different VLANS can not communicate without a layer 3 router.</p>
</blockquote>
</li>
<li><p>simplify the administration of the network</p>
<blockquote>
<p>  One of the best things about VLAN is that it simplifies management. By logically grouping users into the same virtual networks, you make it easy to set up and control your policies at a group level. When users physically move workstations, you can keep them on the same network with different equipment. Or if someone changes teams but not workstations, they can easily be given access to whatever new VLANs they need.</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>device</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference between OOP and POP</title>
    <url>/oop-pop.html</url>
    <content><![CDATA[<h1 id="General-Information"><a href="#General-Information" class="headerlink" title="General Information"></a>General Information</h1><h2 id="Procedure-Oriented-Programming-POP"><a href="#Procedure-Oriented-Programming-POP" class="headerlink" title="Procedure Oriented Programming(POP)"></a>Procedure Oriented Programming(POP)</h2><blockquote>
<p>   <a href="https://www.geeksforgeeks.org/introduction-of-programming-paradigms/" target="_blank" rel="noopener">Procedural Programming</a> can be defined as a programming model which is derived from structured programming, based upon the concept of calling procedure. Procedures, also known as routines, subroutines or functions, simply consist of a series of computational steps to be carried out. During a program’s execution, any given procedure might be called at any point, including by other procedures or itself. </p>
</blockquote>
<h2 id="Object-Oriented-Programming-OOP"><a href="#Object-Oriented-Programming-OOP" class="headerlink" title="Object Oriented Programming(OOP)"></a>Object Oriented Programming(OOP)</h2><blockquote>
<p>   <a href="https://www.geeksforgeeks.org/basic-concepts-of-object-oriented-programming-using-c/" target="_blank" rel="noopener">Object oriented programming</a> can be defined as a programming model which is based upon the concept of objects. Objects contain data in the form of attributes and code in the form of methods. In object oriented programming, computer programs are designed using the concept of objects that interact with real world. Object oriented programming languages are various but the most popular ones are class-based, meaning that objects are instances of classes, which also determine their types. </p>
</blockquote>
<h2 id="Difference-between-POP-and-OOP"><a href="#Difference-between-POP-and-OOP" class="headerlink" title="Difference between POP and OOP"></a>Difference between POP and OOP</h2><table>
<thead>
<tr>
<th align="center">POP</th>
<th align="center">OOP</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Program is divided into small parts called <strong>functions</strong>.</td>
<td align="center">Program is divided into small parts called <strong>objects</strong>.</td>
</tr>
<tr>
<td align="center">POP follows <strong>top-down approach</strong>.</td>
<td align="center">OOP follows <strong>bottom-up approach</strong>.</td>
</tr>
<tr>
<td align="center">There is no access specifier in procedural programming.</td>
<td align="center">Object oriented programming have access specifiers like private, public, protected etc.</td>
</tr>
<tr>
<td align="center">Adding new data and function is not easy.</td>
<td align="center">Adding new data and function is easy.</td>
</tr>
<tr>
<td align="center">POP does not have any proper way for hiding data so it is <strong>less secure</strong>.</td>
<td align="center">OOP provides data hiding so it is <strong>more secure</strong>.</td>
</tr>
<tr>
<td align="center">Overloading is impossible.</td>
<td align="center">Overloading is possible.</td>
</tr>
<tr>
<td align="center">Function is more important than data.</td>
<td align="center">Data is more important than function.</td>
</tr>
<tr>
<td align="center">POP is based on <strong>unreal world</strong>.</td>
<td align="center">OOP is based on <strong>real world</strong>.</td>
</tr>
<tr>
<td align="center">FORTRAN, ALGOL, COBOL,  BASIC, Pascal and C.</td>
<td align="center">Java, C++, C#, Python,  PHP, JavaScript, Ruby, Perl,  Objective-C, Dart, Swift, Scala.</td>
</tr>
</tbody></table>
<h2 id="Interpreted-Languages"><a href="#Interpreted-Languages" class="headerlink" title="Interpreted Languages"></a>Interpreted Languages</h2><blockquote>
<p>  Interpreters will run through a program line by line and execute each command. Now, if the author decided he wanted to use a different kind of olive oil, he could scratch the old one out and add the new one. Your translator friend can then convey that change to you as it happens.</p>
<p>  Interpreted languages were once known to be significantly slower than compiled languages. But, with the development of <a href="https://guide.freecodecamp.org/computer-science/just-in-time-compilation" target="_blank" rel="noopener">just-in-time compilation</a>, that gap is shrinking.</p>
<p>  Examples of common interpreted languages are PHP, Ruby, Python, and JavaScript.</p>
</blockquote>
<h2 id="Compiled-Languages"><a href="#Compiled-Languages" class="headerlink" title="Compiled Languages"></a>Compiled Languages</h2><blockquote>
<p>  Compiled languages are converted directly into machine code that the processor can execute. As a result, they tend to be faster and more efficient to execute than interpreted languages. They also give the developer more control over hardware aspects, like memory management and CPU usage.</p>
<p>  Compiled languages need a “build” step - they need to be manually compiled first. You need to “rebuild” the program every time you need to make a change. In our hummus example, the entire translation is written before it gets to you. If the original author decided he wanted to use a different kind of olive oil, the entire recipe would need to be translated again and then sent to you.</p>
<p>  Examples of pure compiled languages are C, C++, Erlang, Haskell, Rust, and Go.</p>
</blockquote>
<h4 id="Advantages-of-Compiled-Languages"><a href="#Advantages-of-Compiled-Languages" class="headerlink" title="Advantages of Compiled Languages"></a>Advantages of Compiled Languages</h4><p>Programs compiled into native code at compile time usually tend to be faster than those translated at run time, due to the overhead of the translation process.</p>
<h4 id="Disadvantages-of-Compiled-Languages"><a href="#Disadvantages-of-Compiled-Languages" class="headerlink" title="Disadvantages of Compiled Languages"></a>Disadvantages of Compiled Languages</h4><p>The most notable disadvantages are :-</p>
<ul>
<li>Additional time needed to complete the entire compilation step before testing, and</li>
<li>Platform dependence of the generated binary code.</li>
</ul>
<h4 id="Advantages-of-Interpreted-Languages"><a href="#Advantages-of-Interpreted-Languages" class="headerlink" title="Advantages of Interpreted Languages"></a>Advantages of Interpreted Languages</h4><p>An Interpreted language gives implementations some additional flexibility over compiled implementations. Because interpreters execute the source program code themselves, the code itself is platform independent (Java’s byte code, for example). Other features include dynamic typing, and smaller executable program size.</p>
<h4 id="Disadvantages-of-Interpreted-Languages"><a href="#Disadvantages-of-Interpreted-Languages" class="headerlink" title="Disadvantages of Interpreted Languages"></a>Disadvantages of Interpreted Languages</h4><p>The most notable disadvantage is typical execution speed compared to compiled languages.</p>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>OOP</tag>
        <tag>POP</tag>
      </tags>
  </entry>
  <entry>
    <title>Override&amp;Overload in Java and Python</title>
    <url>/overload-override-in-java-python.html</url>
    <content><![CDATA[<h1 id="Override-amp-Overload-in-Java-amp-Python"><a href="#Override-amp-Overload-in-Java-amp-Python" class="headerlink" title="Override &amp; Overload in Java &amp; Python"></a>Override &amp; Overload in Java &amp; Python</h1><h2 id="In-Java"><a href="#In-Java" class="headerlink" title="In Java"></a>In Java</h2><table>
<thead>
<tr>
<th>Overload</th>
<th>Override</th>
</tr>
</thead>
<tbody><tr>
<td>参数列表: 必须<strong>不同</strong></td>
<td>参数列表: 必须<strong>一致</strong></td>
</tr>
<tr>
<td>返回类型: 可以相同, 也可以不同</td>
<td>返回类型: 相同, 或为派生类型</td>
</tr>
<tr>
<td>一种<strong>编译时多态</strong>例子</td>
<td>一种<strong>运行时多态</strong>的例子</td>
</tr>
<tr>
<td>重载发生在<strong>同一个类</strong></td>
<td>重写发生在两个关系为<strong>is-A</strong>的类中</td>
</tr>
</tbody></table>
<h2 id="In-Python"><a href="#In-Python" class="headerlink" title="In Python"></a>In Python</h2><table>
<thead>
<tr>
<th>Overload</th>
<th>Override</th>
</tr>
</thead>
<tbody><tr>
<td>没有重载(以下列出原因)</td>
<td>基本与java一致</td>
</tr>
<tr>
<td>重载要素: 1. 参数类型; 2. 参数数量</td>
<td>(但是以下代码可运行, 只是不建议这样写)</td>
</tr>
<tr>
<td>Python可以接受任意类型的参数</td>
<td></td>
</tr>
<tr>
<td>Python可以使用缺省参数</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">f</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, a, b)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">e</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, a, b, d)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> a + b + d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    a = e()</span><br><span class="line">    print(a.add(<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取豆瓣编程书籍</title>
    <url>/pick-douban.html</url>
    <content><![CDATA[<h1 id="Something-needed-before-action"><a href="#Something-needed-before-action" class="headerlink" title="Something needed before action"></a>Something needed before action</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注意:</span><br><span class="line">    lombok不仅需要导入包,还需要idea安装lombok插件</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>18.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="mind-mapping"><a href="#mind-mapping" class="headerlink" title="mind mapping"></a>mind mapping</h1><ul>
<li>进行IP代理(未使用代理,<a href="http://www.xicidaili.com/" target="_blank" rel="noopener">http://www.xicidaili.com/</a> 找不到稳定可用的代理)</li>
<li>通过HttpClient获取到请求页面的String字符串</li>
<li>通过jsoup解析</li>
<li>(解析需要自己在页面查看源代码,分析DOM结构)</li>
<li>(通过使用jsoup的类似于css选择器的函数,获取元素,元素集,或者文本和属性值)</li>
<li>每一本书的值set进Book实体,并添加进List集合</li>
<li>获取页面底部的总页码数</li>
<li>循环创建线程(一个页面,一个线程)</li>
<li>List集合通过构造方法共享</li>
<li>运行结束后,应该获取到的是一个拥有所有页面的书的集合</li>
<li>根据score属性及num属性,实现Comparator接口,完成排序</li>
<li>遍历当前这个List集合,顺序为每个元素设置id属性</li>
<li>调用poi,遍历List,将每个元素按行写入excel文件</li>
</ul>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Book实体以及Comparator实现类</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 8:54</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 书籍名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 书籍评分</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String score;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评价人数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String num;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String press;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出版日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 价格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 20:06</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Book</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *      降序: 优先评分,人数次之</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Book book2, Book book1)</span> </span>&#123;</span><br><span class="line">        String temp1 = book1.getScore();</span><br><span class="line">        String temp2 = book2.getScore();</span><br><span class="line">        <span class="keyword">if</span> (temp1 == <span class="keyword">null</span> || <span class="string">""</span>.equals(temp1)) &#123;</span><br><span class="line">            temp1 = <span class="string">"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp2 == <span class="keyword">null</span> || <span class="string">""</span>.equals(temp2)) &#123;</span><br><span class="line">            temp2 = <span class="string">"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 评分排序优先</span></span><br><span class="line">        <span class="keyword">double</span> num1 = Double.parseDouble(temp1);</span><br><span class="line">        <span class="keyword">double</span> num2 = Double.parseDouble(temp2);</span><br><span class="line">        <span class="keyword">int</span> result = Double.compare(num1, num2);</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">0</span>) &#123;</span><br><span class="line">            String temp3 = book1.getNum();</span><br><span class="line">            String temp4 = book2.getNum();</span><br><span class="line">            <span class="keyword">if</span> (temp3 == <span class="keyword">null</span> || <span class="string">""</span>.equals(temp3)) &#123;</span><br><span class="line">                temp3 = <span class="string">"0"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp4 == <span class="keyword">null</span> || <span class="string">""</span>.equals(temp4)) &#123;</span><br><span class="line">                temp4 = <span class="string">"0"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 评分相同,则以评价人数排序</span></span><br><span class="line">            <span class="keyword">double</span> num3 = Double.parseDouble(temp3);</span><br><span class="line">            <span class="keyword">double</span> num4 = Double.parseDouble(temp4);</span><br><span class="line">            result = Double.compare(num3, num4);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Spider,抓取指定url的页面字符串</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ParseException;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 8:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Spider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pickData</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (CloseableHttpClient client = HttpClients.createDefault()) &#123;</span><br><span class="line">            HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">            CloseableHttpResponse response = client.execute(httpGet);</span><br><span class="line">            <span class="comment">// 获取响应实体</span></span><br><span class="line">            HttpEntity entity = response.getEntity();</span><br><span class="line">            <span class="comment">// 打印响应状态</span></span><br><span class="line">            <span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> EntityUtils.toString(entity);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用本机ip进行获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pick4data</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置超时处理</span></span><br><span class="line">        RequestConfig config = RequestConfig.custom().setConnectTimeout(<span class="number">3000</span>).</span><br><span class="line">                setSocketTimeout(<span class="number">3000</span>).build();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">        <span class="keyword">return</span> grab(httpGet,config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用代理ip进行获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pick4data</span><span class="params">(String url, String ip, String port)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置代理访问和超时处理</span></span><br><span class="line">        System.out.println(<span class="string">"此时线程: "</span> + Thread.currentThread().getName() + <span class="string">" 爬取所使用的代理为: "</span></span><br><span class="line">                + ip + <span class="string">":"</span> + port);</span><br><span class="line">        HttpHost proxy = <span class="keyword">new</span> HttpHost(ip, Integer.parseInt(port));</span><br><span class="line">        RequestConfig config = RequestConfig.custom().setProxy(proxy).setConnectTimeout(<span class="number">3000</span>).</span><br><span class="line">                setSocketTimeout(<span class="number">3000</span>).build();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">        <span class="keyword">return</span> grab(httpGet,config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">grab</span><span class="params">(HttpGet httpGet, RequestConfig config)</span></span>&#123;</span><br><span class="line">        httpGet.setConfig(config);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Accept"</span>, <span class="string">"text/html,application/xhtml+xml,application/xml;"</span> +</span><br><span class="line">                <span class="string">"q=0.9,image/webp,*/*;q=0.8"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Accept-Encoding"</span>, <span class="string">"gzip, deflate, sdch"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Accept-Language"</span>, <span class="string">"zh-CN,zh;q=0.8"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Connection"</span>, <span class="string">"keep-alive"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Host"</span>, <span class="string">"www.xicidaili.com"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Pragma"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"Upgrade-Insecure-Requests"</span>, <span class="string">"1"</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">"User-Agent"</span>, <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 "</span> +</span><br><span class="line">                <span class="string">"(KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">             <span class="comment">//客户端执行httpGet方法，返回响应</span></span><br><span class="line">             CloseableHttpResponse httpResponse = httpClient.execute(httpGet)) &#123;</span><br><span class="line">            <span class="comment">//得到服务响应状态码</span></span><br><span class="line">            <span class="keyword">int</span> status = <span class="number">200</span>;</span><br><span class="line">            <span class="keyword">if</span> (httpResponse.getStatusLine().getStatusCode() == status) &#123;</span><br><span class="line">                HttpEntity entity = httpResponse.getEntity();</span><br><span class="line">                <span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> EntityUtils.toString(entity, <span class="string">"utf-8"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">解析页面数据,并添加至List&lt;Book&gt;集合</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.utils.Spider;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 9:29</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GrabDouban</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Book&gt; books = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">GrabDouban</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GrabDouban</span><span class="params">(List&lt;Book&gt; books)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.books = books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"url = "</span> + url);</span><br><span class="line">        System.out.println(<span class="string">"Thread.currentThread().getName() = "</span> + Thread.currentThread().getName());</span><br><span class="line">        parse(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        String html = Spider.pickData(url);</span><br><span class="line">        <span class="comment">/*String html = Spider.pick4data(url,"220.249.185.178","9999");*/</span></span><br><span class="line">        Document doc = Jsoup.parse(html);</span><br><span class="line">        Elements elements = doc.select(<span class="string">"ul.subject-list li.subject-item div.info"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element element : elements) &#123;</span><br><span class="line">            String name = element.select(<span class="string">"h2 a"</span>).attr(<span class="string">"title"</span>);</span><br><span class="line">            <span class="comment">// pub和books变量需要被锁</span></span><br><span class="line">            <span class="keyword">synchronized</span> (GrabDouban<span class="class">.<span class="keyword">class</span>)</span>&#123;</span><br><span class="line">                String[] pub = element.select(<span class="string">"div.pub"</span>).text().split(<span class="string">"/"</span>);</span><br><span class="line">                <span class="comment">// 译者或审校,不一定有;所以只能反向获取值</span></span><br><span class="line">                <span class="comment">// 并将作者和审校或译者拼接,都算作author值</span></span><br><span class="line">                String price = pub[pub.length - <span class="number">1</span>];</span><br><span class="line">                String date = pub[pub.length - <span class="number">2</span>];</span><br><span class="line">                String press = pub[pub.length - <span class="number">3</span>];</span><br><span class="line">                StringBuilder author = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">int</span> loop = <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pub.length - loop; i++) &#123;</span><br><span class="line">                    author.append(pub[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                String score = element.select(<span class="string">"div.star span.rating_nums"</span>).text();</span><br><span class="line">                String num = element.select(<span class="string">"div.star span.pl"</span>).text();</span><br><span class="line">                <span class="comment">// 截取评价人数</span></span><br><span class="line">                String regEx = <span class="string">"[^0-9]"</span>;</span><br><span class="line">                Pattern p = Pattern.compile(regEx);</span><br><span class="line">                Matcher m = p.matcher(num);</span><br><span class="line">                num = m.replaceAll(<span class="string">""</span>).trim();</span><br><span class="line">                Book book = <span class="keyword">new</span> Book(<span class="string">""</span>, name, score, num, author.toString(), press, date, price);</span><br><span class="line">                books.add(book);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ?start=20&amp;type=T</span></span><br><span class="line">        <span class="comment">// 这里是单线程执行的,结果正常返回,已打印输出</span></span><br><span class="line">        GrabDouban gd = <span class="keyword">new</span> GrabDouban();</span><br><span class="line">        gd.parse(<span class="string">"https://book.douban.com/tag/%E7%BC%96%E7%A8%8B"</span>);</span><br><span class="line">        System.out.println(<span class="string">"gd.getBooks() = "</span> + gd.getBooks());</span><br><span class="line">        <span class="comment">// 获取总页数</span></span><br><span class="line"><span class="comment">//        String html = Spider.pickData("https://book.douban.com/tag/%E7%BC%96%E7%A8%8B");</span></span><br><span class="line"><span class="comment">//        Document doc = Jsoup.parse(html);</span></span><br><span class="line"><span class="comment">//        int totalPage = Integer.parseInt(doc.select("div.paginator &gt; a").last().text());</span></span><br><span class="line"><span class="comment">//        StringBuilder sb;</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; totalPage; i++) &#123;</span></span><br><span class="line"><span class="comment">//            sb = new StringBuilder("https://book.douban.com/tag/%E7%BC%96%E7%A8%8B?start=");</span></span><br><span class="line"><span class="comment">//            sb.append(i * 20);</span></span><br><span class="line"><span class="comment">//            sb.append("&amp;type=T");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">多线程抓取多个页面数据,并保存值excel中</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 17:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExportExcel</span> </span>&#123;</span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ExportExcel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 工作簿</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFWorkbook workbook;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * sheet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFSheet sheet;</span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 标题行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TITLE_START_POSITION = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 时间行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DATEHEAD_START_POSITION = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 表头行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEAD_START_POSITION = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 文本行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONTENT_START_POSITION = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataList  对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap  表头信息（对象属性名称-&gt;要显示的标题值)[按顺序添加]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName sheet名称和表头值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">excelExport</span><span class="params">(List&lt;?&gt; dataList, Map&lt;String, String&gt; titleMap, String sheetName)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化workbook</span></span><br><span class="line">        initHSSFWorkbook(sheetName);</span><br><span class="line">        <span class="comment">// 标题行</span></span><br><span class="line">        createTitleRow(titleMap, sheetName);</span><br><span class="line">        <span class="comment">// 时间行</span></span><br><span class="line">        createDateHeadRow(titleMap);</span><br><span class="line">        <span class="comment">// 表头行</span></span><br><span class="line">        createHeadRow(titleMap);</span><br><span class="line">        <span class="comment">// 文本行</span></span><br><span class="line">        createContentRow(dataList, titleMap);</span><br><span class="line">        <span class="comment">//设置自动伸缩</span></span><br><span class="line">        <span class="comment">//autoSizeColumn(titleMap.size());</span></span><br><span class="line">        <span class="comment">// 写入处理结果</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//生成UUID文件名称</span></span><br><span class="line">            UUID uuid = UUID.randomUUID();</span><br><span class="line">            String display = uuid + <span class="string">".xls"</span>;</span><br><span class="line">            <span class="comment">//如果web项目，1、设置下载框的弹出（设置response相关参数)；2、通过httpservletresponse.getOutputStream()获取</span></span><br><span class="line">            OutputStream out = <span class="keyword">new</span> FileOutputStream(display);</span><br><span class="line">            workbook.write(out);</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName</span></span><br><span class="line"><span class="comment">     *        sheetName</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initHSSFWorkbook</span><span class="params">(String sheetName)</span> </span>&#123;</span><br><span class="line">        workbook = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line">        sheet = workbook.createSheet(sheetName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成标题（第零行创建）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap  对象属性名称-&gt;表头显示名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName sheet名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTitleRow</span><span class="params">(Map&lt;String, String&gt; titleMap, String sheetName)</span> </span>&#123;</span><br><span class="line">        CellRangeAddress titleRange = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, titleMap.size() - <span class="number">1</span>);</span><br><span class="line">        sheet.addMergedRegion(titleRange);</span><br><span class="line">        HSSFRow titleRow = sheet.createRow(TITLE_START_POSITION);</span><br><span class="line">        HSSFCell titleCell = titleRow.createCell(<span class="number">0</span>);</span><br><span class="line">        titleCell.setCellValue(sheetName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建时间行（第一行创建）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap 对象属性名称-&gt;表头显示名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createDateHeadRow</span><span class="params">(Map&lt;String, String&gt; titleMap)</span> </span>&#123;</span><br><span class="line">        CellRangeAddress dateRange = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, titleMap.size() - <span class="number">1</span>);</span><br><span class="line">        sheet.addMergedRegion(dateRange);</span><br><span class="line">        HSSFRow dateRow = sheet.createRow(DATEHEAD_START_POSITION);</span><br><span class="line">        HSSFCell dateCell = dateRow.createCell(<span class="number">0</span>);</span><br><span class="line">        dateCell.setCellValue(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日"</span>).format(<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建表头行（第二行创建）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap 对象属性名称-&gt;表头显示名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createHeadRow</span><span class="params">(Map&lt;String, String&gt; titleMap)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 第1行创建</span></span><br><span class="line">        HSSFRow headRow = sheet.createRow(HEAD_START_POSITION);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String entry : titleMap.keySet()) &#123;</span><br><span class="line">            HSSFCell headCell = headRow.createCell(i);</span><br><span class="line">            headCell.setCellValue(titleMap.get(entry));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataList 对象数据集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap 表头信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createContentRow</span><span class="params">(List&lt;?&gt; dataList, Map&lt;String, String&gt; titleMap)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (Object obj : dataList) &#123;</span><br><span class="line">                HSSFRow textRow = sheet.createRow(CONTENT_START_POSITION + i);</span><br><span class="line">                <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (String entry : titleMap.keySet()) &#123;</span><br><span class="line">                    String method = <span class="string">"get"</span> + entry.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + entry.substring(<span class="number">1</span>);</span><br><span class="line">                    Method m = obj.getClass().getMethod(method, <span class="keyword">null</span>);</span><br><span class="line">                    String value = m.invoke(obj, <span class="keyword">null</span>).toString();</span><br><span class="line">                    HSSFCell textcell = textRow.createCell(j);</span><br><span class="line">                    textcell.setCellValue(value);</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动伸缩列（如非必要，请勿打开此方法，耗内存）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size 列数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">autoSizeColumn</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; size; j++) &#123;</span><br><span class="line">            sheet.autoSizeColumn(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.util.concurrent.ThreadFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.pojo.BookComparator;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.utils.ExportExcel;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.utils.Spider;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.web.GrabDouban;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 11:23</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadFactory threadFactory = <span class="keyword">new</span> ThreadFactoryBuilder().setNameFormat(<span class="string">"pool-%d"</span>).build();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ExecutorService executorService = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">5</span>, <span class="number">200</span>, <span class="number">0L</span>,</span><br><span class="line">            TimeUnit.MILLISECONDS, <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;(<span class="number">1024</span>), threadFactory, <span class="keyword">new</span> ThreadPoolExecutor.AbortPolicy());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        List&lt;Book&gt; books = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line">        <span class="comment">// 实现每一页一个线程获取数据</span></span><br><span class="line">        <span class="comment">// 获取总页数</span></span><br><span class="line">        String html = Spider.pickData(<span class="string">"https://book.douban.com/tag/%E7%BC%96%E7%A8%8B"</span>);</span><br><span class="line">        <span class="comment">/*String html = Spider.pick4data("https://book.douban.com/tag/%E7%BC%96%E7%A8%8B","220.249.185.178","9999");*/</span></span><br><span class="line">        Document doc = Jsoup.parse(html);</span><br><span class="line">        <span class="keyword">int</span> totalPage = Integer.parseInt(doc.select(<span class="string">"div.paginator &gt; a"</span>).last().text());</span><br><span class="line">        StringBuilder sb;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; totalPage; i++) &#123;</span><br><span class="line">            GrabDouban douban = <span class="keyword">new</span> GrabDouban(books);</span><br><span class="line">            sb = <span class="keyword">new</span> StringBuilder(<span class="string">"https://book.douban.com/tag/%E7%BC%96%E7%A8%8B?start="</span>);</span><br><span class="line">            sb.append(i * <span class="number">20</span>);</span><br><span class="line">            sb.append(<span class="string">"&amp;type=T"</span>);</span><br><span class="line">            douban.setUrl(sb.toString());</span><br><span class="line">            executorService.execute(douban);</span><br><span class="line">            <span class="comment">// 防止爬取速度太快,IP被封</span></span><br><span class="line">            Thread.sleep(<span class="number">3000L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        executorService.shutdown();</span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        books.sort(<span class="keyword">new</span> BookComparator());</span><br><span class="line">        <span class="comment">// 添加编号</span></span><br><span class="line">        List&lt;Book&gt; noBooks = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Integer no = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Book book : books) &#123;</span><br><span class="line">            book.setId((++no).toString());</span><br><span class="line">            noBooks.add(book);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 截取前40个</span></span><br><span class="line">        noBooks = noBooks.subList(<span class="number">0</span>,<span class="number">40</span>);</span><br><span class="line">        Map&lt;String, String&gt; title = <span class="keyword">new</span> LinkedHashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        title.put(<span class="string">"id"</span>, <span class="string">"序号"</span>);</span><br><span class="line">        title.put(<span class="string">"name"</span>, <span class="string">"书名"</span>);</span><br><span class="line">        title.put(<span class="string">"score"</span>, <span class="string">"评分"</span>);</span><br><span class="line">        title.put(<span class="string">"num"</span>, <span class="string">"评价人数"</span>);</span><br><span class="line">        title.put(<span class="string">"author"</span>, <span class="string">"作者"</span>);</span><br><span class="line">        title.put(<span class="string">"press"</span>, <span class="string">"出版社"</span>);</span><br><span class="line">        title.put(<span class="string">"date"</span>, <span class="string">"出版日期"</span>);</span><br><span class="line">        title.put(<span class="string">"price"</span>, <span class="string">"价格"</span>);</span><br><span class="line">        String sheet = <span class="string">"豆瓣编程书籍排行"</span>;</span><br><span class="line">        ExportExcel.excelExport(noBooks, title, sheet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/mystic-cg/Spider" target="_blank" rel="noopener">Github Source Code</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spider</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set schedule by github actions?</title>
    <url>/set-schedule4github-repo.html</url>
    <content><![CDATA[<h1 id="Github-Actions-Schedule"><a href="#Github-Actions-Schedule" class="headerlink" title="Github Actions: Schedule"></a>Github Actions: Schedule</h1><p>Here is a trick to record a day the Miliky Way hasn’t collided with the Andromeda Galaxy.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Has</span> <span class="string">the</span> <span class="string">Milky</span> <span class="string">Way</span> <span class="string">collided</span> <span class="string">with</span> <span class="string">the</span> <span class="string">Andromeda</span> <span class="string">Galaxy?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># daily job</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">    <span class="attr">schedule:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">cron:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">*</span> <span class="string">*</span> <span class="string">*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">    <span class="comment"># This workflow contains a single job called "build"</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">        <span class="comment"># The type of runner that the job will run on</span></span><br><span class="line">        <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Steps represent a sequence of tasks that will be executed as part of the job</span></span><br><span class="line">        <span class="attr">steps:</span></span><br><span class="line">            <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Setup git</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span> <span class="string">Infomation</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">                    <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">'user'</span></span><br><span class="line">                    <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">'email'</span></span><br><span class="line">            <span class="comment"># Record (use record.sh or record2.sh)</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Recording</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">./record.sh</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Pushing</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">                    <span class="string">git</span> <span class="string">push</span> <span class="string">https://$&#123;&#123;github.actor&#125;&#125;:$&#123;&#123;secrets.GITHUB_TOKEN&#125;&#125;@github.com/$&#123;&#123;github.repository&#125;&#125;.git</span> <span class="string">HEAD:$&#123;&#123;</span> <span class="string">github.ref</span> <span class="string">&#125;&#125;</span> <span class="string">||</span> <span class="string">echo</span> <span class="string">"No changes to commit"</span></span><br></pre></td></tr></table></figure>

<p>For the complete project, you can follow <a href="https://github.com/mystic-cg/galaxy" target="_blank" rel="noopener">here</a>.</p>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>schedule</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s learn what&#39;s singleton</title>
    <url>/singleton.html</url>
    <content><![CDATA[<h1 id="单例-Singleton"><a href="#单例-Singleton" class="headerlink" title="单例(Singleton)"></a>单例(Singleton)</h1><p>数学与逻辑学中，singleton定义为“有且仅有一个元素的集合”。</p>
<h2 id="什么是单例"><a href="#什么是单例" class="headerlink" title="什么是单例?"></a>什么是单例?</h2><p>一个类有且仅有一个实例, 并提供一个可以访问它的全局访问点.</p>
<h2 id="单例有什么用"><a href="#单例有什么用" class="headerlink" title="单例有什么用?"></a>单例有什么用?</h2><p>解决一个全局使用类的<strong>频繁创建</strong>与<strong>销毁</strong>.</p>
<h2 id="怎么实现单例"><a href="#怎么实现单例" class="headerlink" title="怎么实现单例?"></a>怎么实现单例?</h2><h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><ul>
<li>隐藏类的构造方法</li>
<li>定义一个公有的静态方法, 通过它返回类的唯一实例</li>
</ul>
<h3 id="java实现"><a href="#java实现" class="headerlink" title="java实现"></a>java实现</h3><ol>
<li>DCL(Double Checked Lock)实现</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lazy4SafeDoubleCheck</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Lazy4SafeDoubleCheck singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Lazy4SafeDoubleCheck</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 避免反射创建多个实例</span></span><br><span class="line">        <span class="keyword">if</span>(singleton != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Lazy4SafeDoubleCheck <span class="title">getSingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Lazy4SafeDoubleCheck<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Lazy4SafeDoubleCheck();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 避免反序列化创建多个实例</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Object <span class="title">readResolve</span><span class="params">()</span> <span class="keyword">throws</span> ObjectStreamException </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>枚举实现</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> SingletonEnum &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用枚举实现的单例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">otherMethods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Something"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>spring注入null</title>
    <url>/spring-injection-failed.html</url>
    <content><![CDATA[<h1 id="not-the-injection-failed-but-NPE"><a href="#not-the-injection-failed-but-NPE" class="headerlink" title="not the injection failed,but NPE"></a>not the injection failed,but NPE</h1><p>为什么这么说呢,因为我的错误信息是空指针异常,而不是注入失败的错误信息</p>
<a id="more"></a> 
<p><img src="assets/59e8499fdd607.png" alt="参考图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> *</span><br><span class="line"> * @author: mystic</span><br><span class="line"> * @date: 2017&#x2F;10&#x2F;19 8:54</span><br><span class="line"> * @since: JDK1.8.0_144</span><br><span class="line"> * @version: X</span><br><span class="line"> * Description: 自定义身份认证验证组件</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Component</span><br><span class="line">class CustomAuthenticationProvider implements AuthenticationProvider &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    private UserService userService;</span><br><span class="line"></span><br><span class="line">    private static CustomAuthenticationProvider provider;</span><br><span class="line"></span><br><span class="line">    public void setUserService(UserService userService) &#123;</span><br><span class="line">        this.userService &#x3D; userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PostConstruct</span><br><span class="line">    public void init()&#123;</span><br><span class="line">        provider &#x3D; this;</span><br><span class="line">        &#x2F;&#x2F; 初始化时,将已经静态化的userService实例化</span><br><span class="line">        provider.userService &#x3D; this.userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Authentication authenticate(Authentication authentication) throws AuthenticationException &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取认证的用户名 &amp; 密码</span><br><span class="line">        String name &#x3D; authentication.getName();</span><br><span class="line">        String password &#x3D; authentication.getCredentials().toString();</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Object&gt; condition &#x3D; new HashMap&lt;&gt;(16);</span><br><span class="line">        condition.put(&quot;userName&quot;,name);</span><br><span class="line">        condition.put(&quot;userPWD&quot;,password);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;userService &#x3D; &quot; + userService);</span><br><span class="line">        System.out.println(&quot;provider.userService &#x3D; &quot; + provider.userService);</span><br><span class="line">        &#x2F;&#x2F; 调用看这里,看这里,一定要看这里喔!!!</span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; userList &#x3D; provider.userService.findUser(condition);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="yeah"><a href="#yeah" class="headerlink" title="yeah"></a>yeah</h1><p>至于产生这种现象的原因,我也没搞太清,猜测是加载顺序的问题,有懂的小伙伴,<br>可以评论留言告诉我(评论留言功能还没做呢o(╯□╰)o)</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot整合Mail服务</title>
    <url>/springboot-mail.html</url>
    <content><![CDATA[<h1 id="导入mail包"><a href="#导入mail包" class="headerlink" title="导入mail包"></a>导入mail包</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">smtp</span> <span class="comment">#smtp是邮件发送协议，pop3和imap是邮件接收协议。因为我们要发送邮件，因此是smtp</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">smtp.qq.com</span> <span class="comment">#邮件发送服务器的主机,这里采用qq邮箱服务器</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">587</span> <span class="comment">#这个端口是必须设置的,看到好多教程,都没有设置它</span></span><br><span class="line">        <span class="attr">username:</span> <span class="comment">#qq邮箱,</span></span><br><span class="line">        <span class="attr">password:</span> <span class="comment">#qq授权码</span></span><br><span class="line">        <span class="attr">properties:</span></span><br><span class="line">            <span class="attr">mail:</span></span><br><span class="line">                <span class="attr">smtp:</span></span><br><span class="line">                    <span class="attr">auth:</span> <span class="literal">true</span></span><br><span class="line">                    <span class="attr">starttls:</span></span><br><span class="line">                        <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">                        <span class="attr">required:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<p>端口配置信息,仅供参考<br><img src="assets/5a093b5554480.jpg" alt="2017042614212226.jpg"></p>
<h1 id="Tests"><a href="#Tests" class="headerlink" title="Tests"></a>Tests</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">BlogApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setFrom(sender);<span class="comment">//发送者.</span></span><br><span class="line">        message.setTo(<span class="string">"xxx@qq.com"</span>);<span class="comment">//接收者.</span></span><br><span class="line">        message.setSubject(<span class="string">"测试邮件（邮件主题）"</span>);<span class="comment">//邮件主题.</span></span><br><span class="line">        message.setText(<span class="string">"这是邮件内容"</span>);<span class="comment">//邮件内容.</span></span><br><span class="line">        javaMailSender.send(message);<span class="comment">//发送邮件</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="关于QQ授权码"><a href="#关于QQ授权码" class="headerlink" title="关于QQ授权码"></a>关于QQ授权码</h1><p><img src="assets/5a093d7c436f4.png" alt="1.png"><br><img src="assets/5a093d7c48466.png" alt="2.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
</search>
